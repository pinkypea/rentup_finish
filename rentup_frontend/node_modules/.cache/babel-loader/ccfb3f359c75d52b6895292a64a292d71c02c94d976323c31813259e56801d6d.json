{"ast":null,"code":"const AUTH_API = `http://localhost:8080/api/balanha/`;\nexport const signinApi = (username, password) => {\n  return fetch(`${AUTH_API}login`, {\n    method: 'POST',\n    body: JSON.stringify({\n      username: username,\n      password: password\n    }),\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  }).then(response => {\n    return response.json();\n  }).catch(error => console.error(error));\n};\nexport const signupApi = (username, password) => {\n  fetch(`${AUTH_API}register`, {\n    method: 'POST',\n    body: JSON.stringify({\n      username: username,\n      password: password\n    }),\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  }).then(res => {\n    if (res.ok) {\n      return res.json();\n    } else {\n      return res.json();\n    }\n  });\n};\nexport const logoutApi = (userId, token) => {\n  console.log(userId, token);\n  fetch(`${AUTH_API}logout`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n      'user_id': userId,\n      'token': token\n    }\n  }).then(res => {\n    if (res.ok) {\n      return res.json();\n    } else {\n      return res.json().then(data => {\n        let errorMessage = 'Authentication failed!';\n        // if (data && data.error && data.error.message) {\n        //   errorMessage = data.error.message;\n        // }\n\n        throw new Error(errorMessage);\n      });\n    }\n  });\n};","map":{"version":3,"names":["AUTH_API","signinApi","username","password","fetch","method","body","JSON","stringify","headers","then","response","json","catch","error","console","signupApi","res","ok","logoutApi","userId","token","log","data","errorMessage","Error"],"sources":["D:/rentup/src/api/AuthApi.js"],"sourcesContent":["const AUTH_API = `http://localhost:8080/api/balanha/`\r\n\r\nexport const signinApi = (username, password) => {\r\n    return fetch(\r\n        `${AUTH_API}login`,\r\n        {\r\n            method: 'POST',\r\n            body: JSON.stringify({\r\n                username: username,\r\n                password: password,\r\n            }),\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n        })\r\n        .then((response) => {return response.json()})\r\n        .catch((error) => console.error(error))\r\n}\r\n\r\nexport const signupApi = (username, password) => {\r\n    fetch(\r\n        `${AUTH_API}register`,\r\n        {\r\n            method: 'POST',\r\n            body: JSON.stringify({\r\n                username: username,\r\n                password: password,\r\n            }),\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n        }\r\n    ).then((res) => {\r\n        if (res.ok) {\r\n            return res.json();\r\n        } else {\r\n            return res.json();\r\n        }\r\n    })\r\n}\r\n\r\nexport const logoutApi = (userId, token) => {\r\n    console.log(userId, token);\r\n    fetch(\r\n        `${AUTH_API}logout`,\r\n        {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'user_id': userId, \r\n                'token': token\r\n            },\r\n        }\r\n    ).then((res) => {\r\n        if (res.ok) {\r\n            return res.json();\r\n        } else {\r\n            return res.json().then((data) => {\r\n                let errorMessage = 'Authentication failed!';\r\n                // if (data && data.error && data.error.message) {\r\n                //   errorMessage = data.error.message;\r\n                // }\r\n    \r\n                throw new Error(errorMessage);\r\n            });\r\n        }\r\n    })\r\n}"],"mappings":"AAAA,MAAMA,QAAQ,GAAI,oCAAmC;AAErD,OAAO,MAAMC,SAAS,GAAG,CAACC,QAAQ,EAAEC,QAAQ,KAAK;EAC7C,OAAOC,KAAK,CACP,GAAEJ,QAAS,OAAM,EAClB;IACIK,MAAM,EAAE,MAAM;IACdC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;MACjBN,QAAQ,EAAEA,QAAQ;MAClBC,QAAQ,EAAEA;IACd,CAAC,CAAC;IACFM,OAAO,EAAE;MACL,cAAc,EAAE;IACpB;EACJ,CAAC,CAAC,CACDC,IAAI,CAAEC,QAAQ,IAAK;IAAC,OAAOA,QAAQ,CAACC,IAAI,EAAE;EAAA,CAAC,CAAC,CAC5CC,KAAK,CAAEC,KAAK,IAAKC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC,CAAC;AAC/C,CAAC;AAED,OAAO,MAAME,SAAS,GAAG,CAACd,QAAQ,EAAEC,QAAQ,KAAK;EAC7CC,KAAK,CACA,GAAEJ,QAAS,UAAS,EACrB;IACIK,MAAM,EAAE,MAAM;IACdC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;MACjBN,QAAQ,EAAEA,QAAQ;MAClBC,QAAQ,EAAEA;IACd,CAAC,CAAC;IACFM,OAAO,EAAE;MACL,cAAc,EAAE;IACpB;EACJ,CAAC,CACJ,CAACC,IAAI,CAAEO,GAAG,IAAK;IACZ,IAAIA,GAAG,CAACC,EAAE,EAAE;MACR,OAAOD,GAAG,CAACL,IAAI,EAAE;IACrB,CAAC,MAAM;MACH,OAAOK,GAAG,CAACL,IAAI,EAAE;IACrB;EACJ,CAAC,CAAC;AACN,CAAC;AAED,OAAO,MAAMO,SAAS,GAAG,CAACC,MAAM,EAAEC,KAAK,KAAK;EACxCN,OAAO,CAACO,GAAG,CAACF,MAAM,EAAEC,KAAK,CAAC;EAC1BjB,KAAK,CACA,GAAEJ,QAAS,QAAO,EACnB;IACIK,MAAM,EAAE,MAAM;IACdI,OAAO,EAAE;MACL,cAAc,EAAE,kBAAkB;MAClC,SAAS,EAAEW,MAAM;MACjB,OAAO,EAAEC;IACb;EACJ,CAAC,CACJ,CAACX,IAAI,CAAEO,GAAG,IAAK;IACZ,IAAIA,GAAG,CAACC,EAAE,EAAE;MACR,OAAOD,GAAG,CAACL,IAAI,EAAE;IACrB,CAAC,MAAM;MACH,OAAOK,GAAG,CAACL,IAAI,EAAE,CAACF,IAAI,CAAEa,IAAI,IAAK;QAC7B,IAAIC,YAAY,GAAG,wBAAwB;QAC3C;QACA;QACA;;QAEA,MAAM,IAAIC,KAAK,CAACD,YAAY,CAAC;MACjC,CAAC,CAAC;IACN;EACJ,CAAC,CAAC;AACN,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}