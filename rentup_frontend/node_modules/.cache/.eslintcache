[{"D:\\rentup\\rentup_frontend\\src\\index.js":"1","D:\\rentup\\rentup_frontend\\src\\App.js":"2","D:\\rentup\\rentup_frontend\\src\\store\\auth-context.js":"3","D:\\rentup\\rentup_frontend\\src\\core\\components\\TypePage\\TypePage.js":"4","D:\\rentup\\rentup_frontend\\src\\core\\components\\HomePage\\HomePage.js":"5","D:\\rentup\\rentup_frontend\\src\\core\\components\\PostPage\\PostPage.js":"6","D:\\rentup\\rentup_frontend\\src\\core\\components\\ManagePage\\ManageHousePage.js":"7","D:\\rentup\\rentup_frontend\\src\\core\\components\\ManagePage\\ManageRoomPage.js":"8","D:\\rentup\\rentup_frontend\\src\\core\\components\\ManagePage\\ManageYourRequestPage.js":"9","D:\\rentup\\rentup_frontend\\src\\core\\components\\PostDetailPage\\PostDetailPage.js":"10","D:\\rentup\\rentup_frontend\\src\\core\\components\\ManagePage\\ManageRentPage.js":"11","D:\\rentup\\rentup_frontend\\src\\core\\components\\ManagePage\\ManageRentRequestPage.js":"12","D:\\rentup\\rentup_frontend\\src\\core\\components\\SigninPage\\SigninPage.js":"13","D:\\rentup\\rentup_frontend\\src\\core\\components\\SignupPage\\SignupPage.js":"14","D:\\rentup\\rentup_frontend\\src\\core\\components\\ForgetPasswordPage\\ForgetPasswordPage.js":"15","D:\\rentup\\rentup_frontend\\src\\core\\components\\AddHousePage\\AddHousePage.js":"16","D:\\rentup\\rentup_frontend\\src\\core\\components\\AddRoomPage\\AddRoomPage.js":"17","D:\\rentup\\rentup_frontend\\src\\core\\components\\EditRoomPage\\EditRoomPage.js":"18","D:\\rentup\\rentup_frontend\\src\\core\\components\\RentRegisterPage\\RentRegisterPage.js":"19","D:\\rentup\\rentup_frontend\\src\\core\\components\\EditHousePage\\EditHousePage.js":"20","D:\\rentup\\rentup_frontend\\src\\core\\components\\common\\Page.js":"21","D:\\rentup\\rentup_frontend\\src\\api\\RoomApi.js":"22","D:\\rentup\\rentup_frontend\\src\\api\\AuthApi.js":"23","D:\\rentup\\rentup_frontend\\src\\api\\ProvinceApi.js":"24","D:\\rentup\\rentup_frontend\\src\\api\\HouseApi.js":"25","D:\\rentup\\rentup_frontend\\src\\api\\RentRequestApi.js":"26","D:\\rentup\\rentup_frontend\\src\\core\\components\\common\\Back\\Back.js":"27","D:\\rentup\\rentup_frontend\\src\\core\\components\\HomePage\\filter\\Filter.js":"28","D:\\rentup\\rentup_frontend\\src\\core\\components\\HomePage\\Recent\\Recent.js":"29","D:\\rentup\\rentup_frontend\\src\\core\\components\\HomePage\\type\\Type.js":"30","D:\\rentup\\rentup_frontend\\src\\core\\components\\HomePage\\landlord\\Landlord.js":"31","D:\\rentup\\rentup_frontend\\src\\core\\components\\ManagePage\\YourRequest\\YourRequest.js":"32","D:\\rentup\\rentup_frontend\\src\\core\\components\\ManagePage\\House\\ManageHouse.js":"33","D:\\rentup\\rentup_frontend\\src\\core\\components\\HomePage\\landlord\\LandlordCard.js":"34","D:\\rentup\\rentup_frontend\\src\\core\\components\\ManagePage\\Room\\ManageRoom.js":"35","D:\\rentup\\rentup_frontend\\src\\core\\components\\HomePage\\Recent\\RecentCard.js":"36","D:\\rentup\\rentup_frontend\\src\\core\\components\\ManagePage\\RentRequest\\RentRequest.js":"37","D:\\rentup\\rentup_frontend\\src\\core\\components\\ManagePage\\Rent\\ManageRent.js":"38","D:\\rentup\\rentup_frontend\\src\\core\\components\\common\\Popup\\Popup.js":"39","D:\\rentup\\rentup_frontend\\src\\api\\CategoryApi.js":"40","D:\\rentup\\rentup_frontend\\src\\api\\UserApi.js":"41","D:\\rentup\\rentup_frontend\\src\\configs\\App.js":"42","D:\\rentup\\rentup_frontend\\src\\core\\components\\HomePage\\type\\TypeCard.js":"43","D:\\rentup\\rentup_frontend\\src\\core\\components\\ManagePage\\House\\HouseCard.js":"44","D:\\rentup\\rentup_frontend\\src\\core\\components\\ManagePage\\Room\\RoomCard.js":"45","D:\\rentup\\rentup_frontend\\src\\core\\components\\ManagePage\\YourRequest\\YourRequestCard.js":"46","D:\\rentup\\rentup_frontend\\src\\core\\components\\common\\Header\\Header.js":"47","D:\\rentup\\rentup_frontend\\src\\core\\components\\ManagePage\\RentRequest\\RentRequestCard.js":"48","D:\\rentup\\rentup_frontend\\src\\core\\components\\common\\Footer\\Footer.js":"49","D:\\rentup\\rentup_frontend\\src\\core\\components\\ManagePage\\Rent\\RentCard.js":"50","D:\\rentup\\rentup_frontend\\src\\core\\components\\common\\Heading\\Heading.js":"51","D:\\rentup\\rentup_frontend\\src\\api\\NotificationApi.js":"52","D:\\rentup\\rentup_frontend\\src\\core\\components\\ProfilePage\\ProfilePage.js":"53","D:\\rentup\\rentup_frontend\\src\\core\\components\\ResetPasswordPage\\ResetPasswordPage.js":"54","D:\\rentup\\rentup_frontend\\src\\core\\components\\ChangePasswordPage\\ChangePasswordPage.js":"55"},{"size":463,"mtime":1667994667798,"results":"56","hashOfConfig":"57"},{"size":5011,"mtime":1670691703936,"results":"58","hashOfConfig":"57"},{"size":2761,"mtime":1669448818801,"results":"59","hashOfConfig":"57"},{"size":445,"mtime":1667892694286,"results":"60","hashOfConfig":"57"},{"size":654,"mtime":1668754900838,"results":"61","hashOfConfig":"57"},{"size":445,"mtime":1667921740131,"results":"62","hashOfConfig":"57"},{"size":234,"mtime":1668351297926,"results":"63","hashOfConfig":"57"},{"size":228,"mtime":1668351290968,"results":"64","hashOfConfig":"57"},{"size":252,"mtime":1669221485089,"results":"65","hashOfConfig":"57"},{"size":6319,"mtime":1671355791921,"results":"66","hashOfConfig":"57"},{"size":228,"mtime":1669469527266,"results":"67","hashOfConfig":"57"},{"size":252,"mtime":1669222208087,"results":"68","hashOfConfig":"57"},{"size":3345,"mtime":1670513097692,"results":"69","hashOfConfig":"57"},{"size":12545,"mtime":1671419266401,"results":"70","hashOfConfig":"57"},{"size":2365,"mtime":1670661984278,"results":"71","hashOfConfig":"57"},{"size":8201,"mtime":1671269183461,"results":"72","hashOfConfig":"57"},{"size":7476,"mtime":1670770646863,"results":"73","hashOfConfig":"57"},{"size":7944,"mtime":1670770726860,"results":"74","hashOfConfig":"57"},{"size":4944,"mtime":1670688819763,"results":"75","hashOfConfig":"57"},{"size":8899,"mtime":1670770687274,"results":"76","hashOfConfig":"57"},{"size":301,"mtime":1667892184186,"results":"77","hashOfConfig":"57"},{"size":3867,"mtime":1670666896041,"results":"78","hashOfConfig":"57"},{"size":2801,"mtime":1670661325067,"results":"79","hashOfConfig":"57"},{"size":695,"mtime":1668171578703,"results":"80","hashOfConfig":"57"},{"size":2609,"mtime":1670665604887,"results":"81","hashOfConfig":"57"},{"size":2979,"mtime":1670668640415,"results":"82","hashOfConfig":"57"},{"size":518,"mtime":1668067642111,"results":"83","hashOfConfig":"57"},{"size":6526,"mtime":1671354879122,"results":"84","hashOfConfig":"57"},{"size":3017,"mtime":1671355142351,"results":"85","hashOfConfig":"57"},{"size":1291,"mtime":1670678440840,"results":"86","hashOfConfig":"57"},{"size":2960,"mtime":1670771304008,"results":"87","hashOfConfig":"57"},{"size":5113,"mtime":1670771456132,"results":"88","hashOfConfig":"57"},{"size":3246,"mtime":1670689853004,"results":"89","hashOfConfig":"57"},{"size":1596,"mtime":1670771349146,"results":"90","hashOfConfig":"57"},{"size":4219,"mtime":1670689872000,"results":"91","hashOfConfig":"57"},{"size":1229,"mtime":1671355052767,"results":"92","hashOfConfig":"57"},{"size":5071,"mtime":1670771470561,"results":"93","hashOfConfig":"57"},{"size":4389,"mtime":1670689774219,"results":"94","hashOfConfig":"57"},{"size":408,"mtime":1669552810334,"results":"95","hashOfConfig":"57"},{"size":248,"mtime":1668691031282,"results":"96","hashOfConfig":"57"},{"size":1941,"mtime":1670662959581,"results":"97","hashOfConfig":"57"},{"size":1986,"mtime":1671356526557,"results":"98","hashOfConfig":"57"},{"size":436,"mtime":1668693560332,"results":"99","hashOfConfig":"57"},{"size":2986,"mtime":1670668218782,"results":"100","hashOfConfig":"57"},{"size":5571,"mtime":1670668166673,"results":"101","hashOfConfig":"57"},{"size":2565,"mtime":1670669468585,"results":"102","hashOfConfig":"57"},{"size":7514,"mtime":1670770969013,"results":"103","hashOfConfig":"57"},{"size":3433,"mtime":1670689065782,"results":"104","hashOfConfig":"57"},{"size":2072,"mtime":1667895404806,"results":"105","hashOfConfig":"57"},{"size":1787,"mtime":1669469728928,"results":"106","hashOfConfig":"57"},{"size":265,"mtime":1667736453482,"results":"107","hashOfConfig":"57"},{"size":345,"mtime":1669300138901,"results":"108","hashOfConfig":"57"},{"size":10995,"mtime":1670691703937,"results":"109","hashOfConfig":"57"},{"size":3533,"mtime":1670661879876,"results":"110","hashOfConfig":"57"},{"size":4183,"mtime":1670663483971,"results":"111","hashOfConfig":"57"},{"filePath":"112","messages":"113","suppressedMessages":"114","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"115"},"ko87ck",{"filePath":"116","messages":"117","suppressedMessages":"118","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"115"},{"filePath":"119","messages":"120","suppressedMessages":"121","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"115"},{"filePath":"122","messages":"123","suppressedMessages":"124","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"115"},{"filePath":"125","messages":"126","suppressedMessages":"127","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"115"},{"filePath":"128","messages":"129","suppressedMessages":"130","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"115"},{"filePath":"131","messages":"132","suppressedMessages":"133","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"115"},{"filePath":"134","messages":"135","suppressedMessages":"136","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"115"},{"filePath":"137","messages":"138","suppressedMessages":"139","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"115"},{"filePath":"140","messages":"141","suppressedMessages":"142","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143"},{"filePath":"144","messages":"145","suppressedMessages":"146","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"115"},{"filePath":"147","messages":"148","suppressedMessages":"149","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"115"},{"filePath":"150","messages":"151","suppressedMessages":"152","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"115"},{"filePath":"153","messages":"154","suppressedMessages":"155","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"156","messages":"157","suppressedMessages":"158","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"115"},{"filePath":"159","messages":"160","suppressedMessages":"161","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"162"},{"filePath":"163","messages":"164","suppressedMessages":"165","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"166","messages":"167","suppressedMessages":"168","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"169","messages":"170","suppressedMessages":"171","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"172","usedDeprecatedRules":"115"},{"filePath":"173","messages":"174","suppressedMessages":"175","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"176"},{"filePath":"177","messages":"178","suppressedMessages":"179","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"115"},{"filePath":"180","messages":"181","suppressedMessages":"182","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"115"},{"filePath":"183","messages":"184","suppressedMessages":"185","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"115"},{"filePath":"186","messages":"187","suppressedMessages":"188","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"115"},{"filePath":"189","messages":"190","suppressedMessages":"191","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"115"},{"filePath":"192","messages":"193","suppressedMessages":"194","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"115"},{"filePath":"195","messages":"196","suppressedMessages":"197","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"115"},{"filePath":"198","messages":"199","suppressedMessages":"200","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"201","usedDeprecatedRules":"202"},{"filePath":"203","messages":"204","suppressedMessages":"205","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"202"},{"filePath":"206","messages":"207","suppressedMessages":"208","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"115"},{"filePath":"209","messages":"210","suppressedMessages":"211","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"212"},{"filePath":"213","messages":"214","suppressedMessages":"215","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"216","usedDeprecatedRules":"212"},{"filePath":"217","messages":"218","suppressedMessages":"219","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"220","usedDeprecatedRules":"115"},{"filePath":"221","messages":"222","suppressedMessages":"223","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"212"},{"filePath":"224","messages":"225","suppressedMessages":"226","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"227","usedDeprecatedRules":"115"},{"filePath":"228","messages":"229","suppressedMessages":"230","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"202"},{"filePath":"231","messages":"232","suppressedMessages":"233","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"234","usedDeprecatedRules":"212"},{"filePath":"235","messages":"236","suppressedMessages":"237","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"238","usedDeprecatedRules":"115"},{"filePath":"239","messages":"240","suppressedMessages":"241","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"115"},{"filePath":"242","messages":"243","suppressedMessages":"244","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"115"},{"filePath":"245","messages":"246","suppressedMessages":"247","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"115"},{"filePath":"248","messages":"249","suppressedMessages":"250","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"251","messages":"252","suppressedMessages":"253","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"115"},{"filePath":"254","messages":"255","suppressedMessages":"256","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"257","usedDeprecatedRules":"115"},{"filePath":"258","messages":"259","suppressedMessages":"260","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"261","usedDeprecatedRules":"115"},{"filePath":"262","messages":"263","suppressedMessages":"264","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"265","usedDeprecatedRules":"115"},{"filePath":"266","messages":"267","suppressedMessages":"268","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"269"},{"filePath":"270","messages":"271","suppressedMessages":"272","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"273","usedDeprecatedRules":"115"},{"filePath":"274","messages":"275","suppressedMessages":"276","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"115"},{"filePath":"277","messages":"278","suppressedMessages":"279","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"280","usedDeprecatedRules":"115"},{"filePath":"281","messages":"282","suppressedMessages":"283","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"115"},{"filePath":"284","messages":"285","suppressedMessages":"286","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"115"},{"filePath":"287","messages":"288","suppressedMessages":"289","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"290","usedDeprecatedRules":"115"},{"filePath":"291","messages":"292","suppressedMessages":"293","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"115"},{"filePath":"294","messages":"295","suppressedMessages":"296","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"115"},"D:\\rentup\\rentup_frontend\\src\\index.js",[],[],[],"D:\\rentup\\rentup_frontend\\src\\App.js",[],[],"D:\\rentup\\rentup_frontend\\src\\store\\auth-context.js",[],[],"D:\\rentup\\rentup_frontend\\src\\core\\components\\TypePage\\TypePage.js",[],[],"D:\\rentup\\rentup_frontend\\src\\core\\components\\HomePage\\HomePage.js",[],[],"D:\\rentup\\rentup_frontend\\src\\core\\components\\PostPage\\PostPage.js",[],[],"D:\\rentup\\rentup_frontend\\src\\core\\components\\ManagePage\\ManageHousePage.js",[],[],"D:\\rentup\\rentup_frontend\\src\\core\\components\\ManagePage\\ManageRoomPage.js",[],[],"D:\\rentup\\rentup_frontend\\src\\core\\components\\ManagePage\\ManageYourRequestPage.js",[],[],"D:\\rentup\\rentup_frontend\\src\\core\\components\\PostDetailPage\\PostDetailPage.js",["297"],[],"import Page from \"../common/Page\"\r\nimport classes from \"./PostDetailPage.module.css\"\r\nimport { useParams } from 'react-router-dom';\r\nimport { useState, useEffect } from \"react\"\r\nimport {getRoomByRoomId} from '../../../api/RoomApi'\r\nimport {Link} from 'react-router-dom'\r\n\r\nconst PostDetailPage = () => {\r\n    const params = useParams()\r\n\r\n    const id = params.id\r\n    \r\n    const [post, setPost] = useState({})\r\n    const [landlord, setLandlord] = useState({})\r\n    \r\n    useEffect(() => {\r\n        getRoomByRoomId(id)\r\n        .then((data) => {\r\n            setPost({\r\n                room_name: data.name,\r\n                location: data.house.city + ' ' + data.house.district + ' ' + data.house.ward,\r\n                room_type: data.category.name,\r\n                detail: data.detail,\r\n                rent_price: data.rentPrice,\r\n                water_price: data.waterPrice,\r\n                electricity_price: data.electricityPrice,\r\n                service_price: data.servicePrice,\r\n                totalPrice: data.totalPrice,\r\n                image: data.image,\r\n            })\r\n            setLandlord({\r\n                cover: data.house.landlord.image,\r\n                name: data.house.landlord.username,\r\n                address: data.house.landlord.city + ' - ' + data.house.landlord.district + ' - ' + data.house.landlord.ward,\r\n                phone: data.house.landlord.phone,\r\n                linkfb: data.house.landlord.linkfb,\r\n                linkin: data.house.landlord.linkin,\r\n                linktw: data.house.landlord.linktw,\r\n                linkli: data.house.landlord.linkli,\r\n                phone: data.house.landlord.phone,\r\n            })\r\n        })\r\n        .catch((err) => {\r\n            alert(err.message);\r\n        });\r\n    }, [id])\r\n    \r\n    return (\r\n        <Page>\r\n            <section class={classes.post}>\r\n                <div class={`${classes.grid} ${classes.wide}`}>\r\n                    <div class={`${classes.row} ${classes.nogutters}`}>\r\n                        <div class={`${classes.col} ${classes.c6} ${classes.l12} ${classes.landlord}`}>\r\n                            <div class={classes.landlordDetails}>\r\n                                <button class={classes.btn3}>Landlord</button>\r\n                                <div class={classes.details}>\r\n                                    <div class={classes.img}>\r\n                                        <img src={landlord.cover} alt='' />\r\n                                        <i class='fa-solid fa-circle-check'></i>\r\n                                    </div>\r\n                                    <span>\r\n                                        <i class='fa fa-location-dot'></i>\r\n                                        <label>{landlord.address}</label>\r\n                                        <h4>{landlord.name}</h4>\r\n                                    </span>\r\n                                    \r\n                                    <ul>\r\n                                        <a href={landlord.linkfb}><li><i class=\"fa-brands fa-facebook-f\"></i></li></a>\r\n                                        <a href={landlord.linkli}><li><i class=\"fa-brands fa-linkedin\"></i></li></a>\r\n                                        <a href={landlord.linktw}><li><i class=\"fa-brands fa-twitter\"></i></li></a>\r\n                                        <a href={landlord.linkin}><li><i class=\"fa-brands fa-instagram\"></i></li></a>\r\n                                    </ul>\r\n            \r\n                                    <div class={`${classes.button} ${classes.flex}`}>\r\n                                        <button>\r\n                                            <i class='fa fa-envelope'></i>\r\n                                            Message\r\n                                        </button>\r\n                                        <button class={classes.btn4}>\r\n                                            <a href={`tel:${landlord.phone}`}><i className='fa fa-phone-alt'></i></a>\r\n                                        </button>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class={`${classes.col} ${classes.c6} ${classes.l12} ${classes.postdetail}`}>\r\n                            <div class={classes.header}>\r\n                                <div class={classes.headerdetail}>\r\n                                    <h1>{post.room_name}</h1>\r\n                                    <p><i class=\"fa fa-location-dot\"></i>{post.location}</p>\r\n                                </div>\r\n                                <div class={classes.headercategory}>\r\n                                    <button class={classes.btn3}>{post.room_type}</button>\r\n                                </div>\r\n                            </div>\r\n                            <div class={classes.main}>\r\n                                <img src={post.image} alt=\"\"/>\r\n                                <p class={classes.description}>{post.detail}</p>\r\n                                <p>\r\n                                    <i class=\"fa fa-money-check\"></i> Rent price: {post.rent_price}đ / month\r\n                                </p>\r\n                                <p>\r\n                                    <i class=\"fa fa-money-check\"></i> Water price: {post.water_price}đ / month\r\n                                </p>\r\n                                <p>\r\n                                    <i class=\"fa fa-money-check\"></i> Electricity price: {post.electricity_price}đ / month\r\n                                </p>\r\n                                <p>\r\n                                    <i class=\"fa fa-money-check\"></i> Services price: {post.service_price}đ / month\r\n                                </p>\r\n                                <div class={classes.mainButton}>\r\n                                    <button>{post.totalPrice}đ / month</button>\r\n                                    <Link to={`/room/${id}/rent_register`}>Rent</Link>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n        </Page>\r\n    )\r\n}\r\n\r\nexport default PostDetailPage","D:\\rentup\\rentup_frontend\\src\\core\\components\\ManagePage\\ManageRentPage.js",[],[],"D:\\rentup\\rentup_frontend\\src\\core\\components\\ManagePage\\ManageRentRequestPage.js",[],[],"D:\\rentup\\rentup_frontend\\src\\core\\components\\SigninPage\\SigninPage.js",[],[],"D:\\rentup\\rentup_frontend\\src\\core\\components\\SignupPage\\SignupPage.js",["298","299","300"],[],"D:\\rentup\\rentup_frontend\\src\\core\\components\\ForgetPasswordPage\\ForgetPasswordPage.js",[],[],"D:\\rentup\\rentup_frontend\\src\\core\\components\\AddHousePage\\AddHousePage.js",["301","302","303","304"],[],"import img from \"../../../assets/img/backgroundSignin.jpg\"\r\nimport classes from \"./AddHousePage.module.css\"\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { useState, useEffect, useContext, useRef } from \"react\"\r\nimport AuthContext from '../../../store/auth-context';\r\nimport {getProvince, getDistrict, getWard} from \"../../../api/ProvinceApi\"\r\nimport { createHouseApi } from \"../../../api/HouseApi\";\r\nimport Popup from \"../common/Popup/Popup\"\r\nimport {getAllCategory} from \"../../../api/CategoryApi\"\r\n\r\nconst AddHousePage = () => {\r\n    const history = useHistory()\r\n    \r\n    const [cityData, setCityData] = useState([])\r\n    const [districtData, setDistrictData] = useState([])\r\n    const [wardData, setWardData] = useState([])\r\n    const [typeData, setTypeData] = useState([])\r\n    const [popup, setPopup] = useState(false)\r\n    const [popupTitle, setPopupTitle] = useState('Add House successfully')\r\n    const [popupDetail, setPopupDetail] = useState('Your house has been added')\r\n    const [popupRedirect, setPopupRedirect] = useState(false)\r\n    \r\n    const imageRef = useRef()\r\n    \r\n    const [values, setValues] = useState({\r\n        city: '1',\r\n        district: '1',\r\n        ward: '1',\r\n        type: '1',\r\n        detail: '',\r\n        description: ''\r\n    })\r\n    \r\n    const {city, district, ward, type, detail, description} = values\r\n    \r\n    const authCtx = useContext(AuthContext)\r\n    \r\n    useEffect(() => {\r\n        getProvince().then(data => {\r\n            const tempCity = []\r\n            data.forEach(data => {\r\n                tempCity.push({\r\n                    text: data.name,\r\n                    value: data.code,\r\n                })\r\n            })\r\n            setCityData(tempCity)\r\n        })\r\n        .catch(error => console.log('Error', error))\r\n    }, [])\r\n    \r\n    useEffect(() => {\r\n        getDistrict(city).then(data => {\r\n            const tempDistrict = []\r\n            data.districts.forEach(data => {\r\n                tempDistrict.push({\r\n                    text: data.name,\r\n                    value: data.code,\r\n                })\r\n            })\r\n            setDistrictData(tempDistrict)\r\n        })\r\n        .catch(error => console.log('Error', error))\r\n    }, [city])\r\n    \r\n    useEffect(() => {\r\n        getWard(district).then(data => {\r\n            const tempWard = []\r\n            data.wards.forEach(data => {\r\n                tempWard.push({\r\n                    text: data.name,\r\n                    value: data.code,\r\n                })\r\n            })\r\n            setWardData(tempWard)\r\n        })\r\n        .catch(error => console.log('Error', error))\r\n    }, [district])\r\n    \r\n    useEffect(() => {\r\n        getAllCategory()\r\n        .then((data) => {\r\n            const temp = []\r\n            data.forEach(data => {\r\n                temp.push({\r\n                    text: data.name,\r\n                    img: data.image,\r\n                    value: data.id,\r\n                })\r\n            })\r\n            setTypeData(temp)\r\n        })\r\n        .catch((err) => {\r\n            alert(err.message);\r\n        });\r\n    }, [])\r\n    \r\n    const handleChange = (key) => {\r\n        return (event) => {\r\n            setValues({...values, [key]: event.target.value})\r\n        }\r\n    }\r\n    \r\n    const submitHandler = (event) => {\r\n        event.preventDefault();\r\n\r\n        const cityInput = cityData.find(c => c.value == city).text\r\n        const districtInput = districtData.find(d => d.value == district).text\r\n        const wardInput = wardData.find(w => w.value == ward).text\r\n        const categoryInput = typeData.find(t => t.value == type).text\r\n        \r\n        const house = {\r\n            category: categoryInput,\r\n            city: cityInput,\r\n            district: districtInput,\r\n            ward: wardInput,\r\n            detail: detail,\r\n            description: description,\r\n            image: imageRef.current.files[0],\r\n        }\r\n        \r\n        createHouseApi(house, authCtx.token)\r\n        .then((response) => {\r\n            if(response.status === 400) {\r\n                setPopupTitle(response.statusText)\r\n                setPopupDetail(response.data)\r\n                setPopupRedirect(false)\r\n            }\r\n            if(response.status === 200){\r\n                setPopupTitle('Add House successfully')\r\n                setPopupDetail('Your house has been added!')\r\n                setPopupRedirect(true)\r\n            }\r\n            setPopup(true)\r\n        })\r\n        .catch((err) => {\r\n            alert(err.message);\r\n        });\r\n    }\r\n    \r\n    const redirectToManagePage = () => {\r\n        if(popupRedirect){\r\n            history.replace(\"/manage\")    \r\n        }else{\r\n            setPopup(false)\r\n        }\r\n    }\r\n    \r\n    return (\r\n        <section className={classes.back}>\r\n            <div className={classes.center}>\r\n                <h1>Add House</h1>\r\n                <form method=\"POST\" onSubmit={submitHandler}>\r\n                    <div className={classes.txt_field}>\r\n                        <select \r\n                            value={type}\r\n                            onChange={handleChange('type')}\r\n                        >\r\n                            {typeData.map(type => <option value={type.value}>{type.text}</option>)}\r\n                        </select>\r\n                        <span></span>\r\n                        <label>Type</label>\r\n                    </div>\r\n                    <div className={classes.txt_field}>\r\n                        <select \r\n                            value={city}\r\n                            onChange={handleChange('city')}\r\n                        >\r\n                            {cityData.map(city => <option value={city.value}>{city.text}</option>)}\r\n                        </select>\r\n                        <span></span>\r\n                        <label>City</label>\r\n                    </div>\r\n                    <div className={classes.txt_field}>\r\n                        <select \r\n                            value={district}\r\n                            onChange={handleChange('district')}\r\n                        >\r\n                            {districtData.map(district => <option value={district.value}>{district.text}</option>)}\r\n                        </select>\r\n                        <span></span>\r\n                        <label>District</label>\r\n                    </div>\r\n                    <div className={classes.txt_field}>\r\n                        <select \r\n                            value={ward}\r\n                            onChange={handleChange('ward')}\r\n                        >\r\n                            {wardData.map(ward => <option value={ward.value}>{ward.text}</option>)}\r\n                        </select>\r\n                        <span></span>\r\n                        <label>Ward</label>\r\n                    </div>\r\n                    <div className={classes.txt_field}>\r\n                        <input type=\"text\" required value={detail} onChange={handleChange('detail')}/>\r\n                        <span></span>\r\n                        <label>Detail</label>\r\n                    </div>\r\n                    <div className={classes.txt_field}>\r\n                        <input type=\"text\" required value={description} onChange={handleChange('description')}/>\r\n                        <span></span>\r\n                        <label>Description</label>\r\n                    </div>\r\n                    <div className={classes.txt_field}>\r\n                        <input type=\"file\" required ref={imageRef}/>\r\n                        <span></span>\r\n                        <label>Image</label>\r\n                    </div>\r\n                    <button type=\"submit\">Add</button>\r\n                    <div className={classes.signup_link}>\r\n                        <Link to=\"/\">home</Link>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n            <img src={img} alt='' />\r\n            <Popup trigger={popup}>\r\n                <h3>{popupTitle}</h3>\r\n                <p>{popupDetail}</p>\r\n                <button type=\"button\" onClick={redirectToManagePage}>Ok</button>\r\n            </Popup>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default AddHousePage ","D:\\rentup\\rentup_frontend\\src\\core\\components\\AddRoomPage\\AddRoomPage.js",[],[],"D:\\rentup\\rentup_frontend\\src\\core\\components\\EditRoomPage\\EditRoomPage.js",[],[],"D:\\rentup\\rentup_frontend\\src\\core\\components\\RentRegisterPage\\RentRegisterPage.js",["305"],[],"import Page from \"../common/Page\"\r\nimport classes from \"./RentRegisterPage.module.css\"\r\nimport RecentCard from \"../HomePage/Recent/RecentCard\";\r\nimport LandlordCard from \"../HomePage/landlord/LandlordCard\"\r\nimport Back from \"../common/Back/Back\"\r\nimport {getRoomByRoomId} from \"../../../api/RoomApi\"\r\nimport {createRentRequest} from \"../../../api/RentRequestApi\"\r\nimport { useState, useEffect, useContext, useRef } from \"react\"\r\nimport AuthContext from '../../../store/auth-context';\r\nimport { useParams } from 'react-router-dom';\r\nimport img from \"../../../assets/img/backgroundPost.jpg\"\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Popup from \"../common/Popup/Popup\"\r\n\r\n\r\n\r\nconst RentRegisterPage = () => {\r\n    const history = useHistory()\r\n    \r\n    const params = useParams()\r\n\r\n    const id = params.id\r\n    \r\n    const authCtx = useContext(AuthContext)\r\n    \r\n    const [post, setPost] = useState({})\r\n    const [landlord, setLandlord] = useState({})\r\n    const messageInputRef = useRef()\r\n    \r\n    const [popup, setPopup] = useState(false)\r\n    const [popupTitle, setPopupTitle] = useState('Create request successfully')\r\n    const [popupDetail, setPopupDetail] = useState('Your request has been created!')\r\n    const [popupRedirect, setPopupRedirect] = useState(false)\r\n    \r\n    useEffect(() => {\r\n        getRoomByRoomId(id)\r\n        .then((data) => {\r\n            setPost({\r\n                room_id: data.id,\r\n                room_name: data.name,\r\n                cover: data.image,\r\n                category: data.category.name,\r\n                city: data.house.city,\r\n                district: data.house.district,\r\n                ward: data.house.ward,\r\n                totalPrice: data.totalPrice\r\n            })\r\n            setLandlord({\r\n                cover: data.house.landlord.image,\r\n                name: data.house.landlord.username,\r\n                address: data.house.landlord.city + ' - ' + data.house.landlord.district + ' - ' + data.house.landlord.ward,\r\n                phone: data.house.landlord.phone,\r\n                linkfb: data.house.landlord.linkfb,\r\n                linkin: data.house.landlord.linkin,\r\n                linktw: data.house.landlord.linktw,\r\n                linkli: data.house.landlord.linkli,\r\n            })\r\n        })\r\n        .catch((err) => {\r\n                alert(err.message);\r\n        });\r\n    }, [])\r\n    \r\n    const sendRequest = () => {\r\n        const data = {\r\n            room: id,\r\n            message: messageInputRef.current.value,\r\n        }\r\n        \r\n        createRentRequest(data, authCtx.token)\r\n        .then(response => {\r\n            if(response.status === 400){\r\n                setPopupTitle(response.statusText)\r\n                setPopupDetail(response.data)\r\n                setPopupRedirect(false)\r\n            }\r\n            if(response.status === 200){\r\n                setPopupTitle('Create request successfully')\r\n                setPopupDetail('Your request has been created!')\r\n                setPopupRedirect(true)\r\n            }\r\n            setPopup(true)\r\n        })\r\n        .catch((err) => {\r\n            alert(err.message);\r\n        });\r\n    }\r\n    \r\n    const redirectPage = () => {\r\n        if(popupRedirect){\r\n            history.replace('/manage/your_request')\r\n        }else{\r\n            setPopup(false)\r\n        }\r\n    }\r\n    \r\n    return (\r\n        <Page>\r\n            <section>\r\n                <Back name='Rent Register' title='Your Rent Register' cover={img}/>\r\n                <section className={`${classes.recent} ${classes.padding}`}>\r\n                    <div className={classes.container}>\r\n                        <div className={`${classes.grid1} ${classes.mtop}`}>\r\n                            <div className={`${classes.shadow} ${classes.rentRequestCard}`} key={id}>\r\n                                <div className={classes.rentRequestCard_info}>\r\n                                    <RecentCard item={post}/>\r\n                                    <LandlordCard item={landlord}/>\r\n                                </div>\r\n                                <div className={classes.rentRequestCard_message}>\r\n                                    <h2>Message:</h2>\r\n                                    <textarea type=\"text\" ref={messageInputRef}/>\r\n                                </div>\r\n                                <div className={`${classes.rentRequestCard_action}`}>\r\n                                    <button onClick={sendRequest}>Send</button>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </section>\r\n            </section>\r\n            <Popup trigger={popup}>\r\n                <h3>{popupTitle}</h3>\r\n                <p>{popupDetail}</p>\r\n                <button type=\"button\" onClick={redirectPage}>Ok</button>\r\n            </Popup>\r\n        </Page>\r\n    )\r\n}\r\n\r\nexport default RentRegisterPage","D:\\rentup\\rentup_frontend\\src\\core\\components\\EditHousePage\\EditHousePage.js",["306","307","308","309"],[],"import img from \"../../../assets/img/backgroundSignin.jpg\"\r\nimport classes from \"./EditHousePage.module.css\"\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { useState, useEffect, useContext, useRef } from \"react\"\r\nimport AuthContext from '../../../store/auth-context';\r\nimport {getProvince, getDistrict, getWard} from \"../../../api/ProvinceApi\"\r\nimport { getHouseDetail, editHouse } from \"../../../api/HouseApi\";\r\nimport { useParams } from 'react-router-dom';\r\nimport Popup from \"../common/Popup/Popup\"\r\nimport {getAllCategory} from \"../../../api/CategoryApi\"\r\n\r\nconst EditHousePage = () => {\r\n    const history = useHistory()\r\n    \r\n    const params = useParams()\r\n\r\n    const id = params.id\r\n    \r\n    const [cityData, setCityData] = useState([])\r\n    const [districtData, setDistrictData] = useState([])\r\n    const [wardData, setWardData] = useState([])\r\n    const [typeData, setTypeData] = useState([])\r\n    \r\n    const imageRef = useRef()\r\n    \r\n    const [values, setValues] = useState({\r\n        city: '1',\r\n        district: '1',\r\n        ward: '1',\r\n        type: '1',\r\n        detail: '',\r\n        description: ''\r\n    })\r\n    const [popup, setPopup] = useState(false)\r\n    const [popupTitle, setPopupTitle] = useState('Edit House successfully')\r\n    const [popupDetail, setPopupDetail] = useState('Your house has been updated!')\r\n    const [popupRedirect, setPopupRedirect] = useState(false)\r\n    \r\n    const {city, district, ward, type, detail, description} = values\r\n    \r\n    const authCtx = useContext(AuthContext)\r\n    \r\n    useEffect(() => {\r\n        getProvince().then(data => {\r\n            const tempCity = []\r\n            data.forEach(data => {\r\n                tempCity.push({\r\n                    text: data.name,\r\n                    value: data.code,\r\n                })\r\n            })\r\n            setCityData(tempCity)\r\n        })\r\n        .catch(error => console.log('Error', error))\r\n    }, [])\r\n    \r\n    useEffect(() => {\r\n        getDistrict(city).then(data => {\r\n            const tempDistrict = []\r\n            data.districts.forEach(data => {\r\n                tempDistrict.push({\r\n                    text: data.name,\r\n                    value: data.code,\r\n                })\r\n            })\r\n            setDistrictData(tempDistrict)\r\n        })\r\n        .catch(error => console.log('Error', error))\r\n    }, [city])\r\n    \r\n    useEffect(() => {\r\n        getWard(district).then(data => {\r\n            const tempWard = []\r\n            data.wards.forEach(data => {\r\n                tempWard.push({\r\n                    text: data.name,\r\n                    value: data.code,\r\n                })\r\n            })\r\n            setWardData(tempWard)\r\n        })\r\n        .catch(error => console.log('Error', error))\r\n    }, [district])\r\n    \r\n    useEffect(() => {\r\n        getAllCategory()\r\n        .then((data) => {\r\n            const temp = []\r\n            data.forEach(data => {\r\n                temp.push({\r\n                    text: data.name,\r\n                    img: data.image,\r\n                    value: data.id,\r\n                })\r\n            })\r\n            setTypeData(temp)\r\n        })\r\n        .catch((err) => {\r\n            alert(err.message);\r\n        });\r\n    }, [])\r\n    \r\n    useEffect(() => {\r\n        getHouseDetail(id, authCtx.token)\r\n        .then((data) => {\r\n            setValues({\r\n                city: '1',\r\n                district: '1',\r\n                ward: '1',\r\n                type: '1',\r\n                detail: data.detail,\r\n                description: data.description,\r\n            })\r\n        })\r\n        .catch((err) => {\r\n            alert(err.message);\r\n        });\r\n        \r\n    }, [id])\r\n    \r\n    const handleChange = (key) => {\r\n        return (event) => {\r\n            setValues({...values, [key]: event.target.value})\r\n        }\r\n    }\r\n    \r\n    const submitHandler = (event) => {\r\n        event.preventDefault();\r\n\r\n        const cityInput = cityData.find(c => c.value == city).text\r\n        const districtInput = districtData.find(d => d.value == district).text\r\n        const wardInput = wardData.find(w => w.value == ward).text\r\n        \r\n        const house = {\r\n            category: type,\r\n            city: cityInput,\r\n            district: districtInput,\r\n            ward: wardInput,\r\n            detail: detail,\r\n            description: description,\r\n            image: imageRef.current.files[0],\r\n        }\r\n        \r\n        editHouse(id, house, authCtx.token)\r\n        .then((response) => {\r\n            if(response.status === 400) {\r\n                setPopupTitle(response.statusText)\r\n                setPopupDetail(response.data)\r\n                setPopupRedirect(false)\r\n            }\r\n            if(response.status === 403){\r\n                setPopupTitle('Failed')\r\n                setPopupDetail('You do not have permission to perform this action!')\r\n                setPopupRedirect(false)\r\n            }\r\n            if(response.status === 200){\r\n                setPopupTitle('Edit House successfully')\r\n                setPopupDetail('Your house has been updated!')\r\n                setPopupRedirect(true)\r\n            }\r\n            setPopup(true)\r\n        })\r\n        .catch((err) => {\r\n            alert(err.message);\r\n        });\r\n    }\r\n    \r\n    const goBackPage = () => {\r\n        if(popupRedirect){\r\n            history.goBack()\r\n        }else{\r\n            setPopup(false)\r\n        }\r\n    }\r\n    \r\n    return (\r\n        <section className={classes.back}>\r\n            <div className={classes.center}>\r\n                <h1>Edit House</h1>\r\n                <form method=\"POST\" onSubmit={submitHandler}>\r\n                    <div className={classes.txt_field}>\r\n                        <select \r\n                            value={type}\r\n                            onChange={handleChange('type')}\r\n                        >\r\n                            {typeData.map(type => <option value={type.value}>{type.text}</option>)}\r\n                        </select>\r\n                        <span></span>\r\n                        <label>Type</label>\r\n                    </div>\r\n                    <div className={classes.txt_field}>\r\n                        <select \r\n                            value={city}\r\n                            onChange={handleChange('city')}\r\n                        >\r\n                            {cityData.map(city => <option value={city.value}>{city.text}</option>)}\r\n                        </select>\r\n                        <span></span>\r\n                        <label>City</label>\r\n                    </div>\r\n                    <div className={classes.txt_field}>\r\n                        <select \r\n                            value={district}\r\n                            onChange={handleChange('district')}\r\n                        >\r\n                            {districtData.map(district => <option value={district.value}>{district.text}</option>)}\r\n                        </select>\r\n                        <span></span>\r\n                        <label>District</label>\r\n                    </div>\r\n                    <div className={classes.txt_field}>\r\n                        <select \r\n                            value={ward}\r\n                            onChange={handleChange('ward')}\r\n                        >\r\n                            {wardData.map(ward => <option value={ward.value}>{ward.text}</option>)}\r\n                        </select>\r\n                        <span></span>\r\n                        <label>Ward</label>\r\n                    </div>\r\n                    <div className={classes.txt_field}>\r\n                        <input type=\"text\" required value={detail} onChange={handleChange('detail')}/>\r\n                        <span></span>\r\n                        <label>Detail</label>\r\n                    </div>\r\n                    <div className={classes.txt_field}>\r\n                        <input type=\"text\" required value={description} onChange={handleChange('description')}/>\r\n                        <span></span>\r\n                        <label>Description</label>\r\n                    </div>\r\n                    <div className={classes.txt_field}>\r\n                        <input type=\"file\" required ref={imageRef}/>\r\n                        <span></span>\r\n                        <label>Image</label>\r\n                    </div>\r\n                    <button type=\"submit\">Submit</button>\r\n                    <div className={classes.signup_link}>\r\n                        <Link to=\"/\">home</Link>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n            <img src={img} alt='' />\r\n            <Popup trigger={popup}>\r\n                <h3>{popupTitle}</h3>\r\n                <p>{popupDetail}</p>\r\n                <button type=\"button\" onClick={goBackPage}>Ok</button>\r\n            </Popup>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default EditHousePage ","D:\\rentup\\rentup_frontend\\src\\core\\components\\common\\Page.js",[],[],"D:\\rentup\\rentup_frontend\\src\\api\\RoomApi.js",[],[],"D:\\rentup\\rentup_frontend\\src\\api\\AuthApi.js",[],[],"D:\\rentup\\rentup_frontend\\src\\api\\ProvinceApi.js",[],[],"D:\\rentup\\rentup_frontend\\src\\api\\HouseApi.js",[],[],"D:\\rentup\\rentup_frontend\\src\\api\\RentRequestApi.js",[],[],"D:\\rentup\\rentup_frontend\\src\\core\\components\\common\\Back\\Back.js",[],[],"D:\\rentup\\rentup_frontend\\src\\core\\components\\HomePage\\filter\\Filter.js",["310","311","312","313"],[],"import classes from \"./Filter.module.css\"\r\nimport Heading from \"../../common/Heading/Heading\"\r\nimport {useState, useEffect} from \"react\"\r\nimport {getProvince, getDistrict, getWard} from \"../../../../api/ProvinceApi\"\r\nimport {getAllCategory} from \"../../../../api/CategoryApi\"\r\n\r\nconst Filter = (props) => {\r\n    const [cityData, setCityData] = useState([])\r\n    const [districtData, setDistrictData] = useState([])\r\n    const [wardData, setWardData] = useState([])\r\n    const [typeData, setTypeData] = useState([])\r\n    \r\n    const [values, setValues] = useState({\r\n        city: '1',\r\n        district: '1',\r\n        ward: '1',\r\n        type: '0',\r\n        priceMin: 0,\r\n        priceMax: 0\r\n    })\r\n    \r\n    const {city, district, ward, type, priceMin, priceMax} = values\r\n    \r\n    useEffect(() => {\r\n        getProvince().then(data => {\r\n            const tempCity = []\r\n            data.forEach(data => {\r\n                tempCity.push({\r\n                    text: data.name,\r\n                    value: data.code,\r\n                })\r\n            })\r\n            setCityData(tempCity)\r\n        })\r\n        .catch(error => console.log('Error', error))\r\n    }, [])\r\n    \r\n    useEffect(() => {\r\n        getDistrict(city).then(data => {\r\n            const tempDistrict = []\r\n            data.districts.forEach(data => {\r\n                tempDistrict.push({\r\n                    text: data.name,\r\n                    value: data.code,\r\n                })\r\n            })\r\n            setDistrictData(tempDistrict)\r\n        })\r\n        .catch(error => console.log('Error', error))\r\n    }, [city])\r\n    \r\n    useEffect(() => {\r\n        getWard(district).then(data => {\r\n            const tempWard = []\r\n            data.wards.forEach(data => {\r\n                tempWard.push({\r\n                    text: data.name,\r\n                    value: data.code,\r\n                })\r\n            })\r\n            setWardData(tempWard)\r\n        })\r\n        .catch(error => console.log('Error', error))\r\n    }, [district])\r\n    \r\n    useEffect(() => {\r\n        getAllCategory()\r\n        .then((data) => {\r\n            const temp = []\r\n            data.forEach(data => {\r\n                temp.push({\r\n                    text: data.name,\r\n                    img: data.image,\r\n                    value: data.id,\r\n                })\r\n            })\r\n            setTypeData(temp)\r\n        })\r\n        .catch((err) => {\r\n            alert(err.message);\r\n        });\r\n    }, [])\r\n    \r\n    const handleChange = (key) => {\r\n        return (event) => {\r\n            setValues({...values, [key]: event.target.value})\r\n        }\r\n    }\r\n    \r\n    const submitHandler = (event) => {\r\n        event.preventDefault()\r\n        \r\n        const cityInput = cityData.find(c => c.value == city).text\r\n        const districtInput = districtData.find(d => d.value == district).text\r\n        const wardInput = wardData.find(w => w.value == ward).text\r\n        const categoryInput = typeData.find(t => t.value == type).text\r\n\r\n        const filter = {\r\n            category: categoryInput,\r\n            city: cityInput,\r\n            district: districtInput,\r\n            ward: wardInput,\r\n            min_price: priceMin,\r\n            max_price: priceMax\r\n        }\r\n\r\n        props.handleFilter(filter)\r\n    }\r\n    \r\n    return (\r\n        <section className={classes.filter}>\r\n            <div className={classes.container}>\r\n            <Heading title='Search Your Next Home ' subtitle='Find new & featured property located in your local city.' />\r\n\r\n            <form className={classes.flex}>\r\n                <div className={classes.box}>\r\n                    <span>City</span>\r\n                    <select \r\n                        id=\"city\" \r\n                        name=\"city\" \r\n                        value={city}\r\n                        onChange={handleChange('city')}\r\n                    >\r\n                        {cityData.map(city => <option value={city.value}>{city.text}</option>)}\r\n                    </select>\r\n                </div>\r\n                <div className={classes.box}>\r\n                    <span>District</span>\r\n                    <select \r\n                        id=\"district\" \r\n                        name=\"district\"\r\n                        value={district}\r\n                        onChange={handleChange('district')}\r\n                    >\r\n                        {districtData.map(district => <option value={district.value}>{district.text}</option>)}\r\n                    </select>\r\n                </div>\r\n                <div className={classes.box}>\r\n                    <span>Ward</span>\r\n                    <select \r\n                        id=\"ward\" \r\n                        name=\"ward\"\r\n                        value={ward}\r\n                        onChange={handleChange('ward')}\r\n                    >\r\n                        {wardData.map(ward => <option value={ward.value}>{ward.text}</option>)}\r\n                    </select>\r\n                </div>\r\n                <div className={classes.box}>\r\n                    <span>Property Type</span>\r\n                    <select \r\n                        id=\"type\" \r\n                        name=\"type\"\r\n                        value={type}\r\n                        onChange={handleChange('type')}\r\n                    >\r\n                        {typeData.map(type => <option value={type.value}>{type.text}</option>)}\r\n                    </select>\r\n                </div>\r\n                <div className={classes.box}>\r\n                    <span>Price Min</span>\r\n                    <input \r\n                        type='number' \r\n                        placeholder='Price Min'\r\n                        value={priceMin}\r\n                        onChange={handleChange('priceMin')}\r\n                    />\r\n                </div>\r\n                <div className={classes.box}>\r\n                    <span>Price Max</span>\r\n                    <input \r\n                        type='number' \r\n                        placeholder='Price Max'\r\n                        value={priceMax}\r\n                        onChange={handleChange('priceMax')}\r\n                    />\r\n                </div>\r\n                <div className={classes.box}>\r\n                    <h4>Advance Filter</h4>\r\n                </div>\r\n                <button type=\"submit\" onClick={submitHandler}>\r\n                    <i className='fa fa-search'></i>\r\n                </button>\r\n            </form>\r\n            </div>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default Filter;",[],"D:\\rentup\\rentup_frontend\\src\\core\\components\\HomePage\\Recent\\Recent.js",[],[],"D:\\rentup\\rentup_frontend\\src\\core\\components\\HomePage\\type\\Type.js",[],[],"D:\\rentup\\rentup_frontend\\src\\core\\components\\HomePage\\landlord\\Landlord.js",[],[],[],"D:\\rentup\\rentup_frontend\\src\\core\\components\\ManagePage\\YourRequest\\YourRequest.js",["314"],[],"import Back from \"../../common/Back/Back\"\r\nimport img from \"../../../../assets/img/backgroundPost.jpg\"\r\nimport classes from \"./YourRequest.module.css\"\r\nimport YourRequestCard from \"./YourRequestCard\"\r\nimport { useState, useEffect, useContext } from \"react\"\r\nimport AuthContext from '../../../../store/auth-context';\r\nimport {getAllRentRequestFromTenant} from \"../../../../api/RentRequestApi\"\r\nimport axios from \"axios\"\r\n\r\nconst ManagerHouse = () => {\r\n    const authCtx = useContext(AuthContext)\r\n    \r\n    const [requests, setRequests] = useState([])\r\n    const [nextLink, setNextLink] = useState()\r\n    const [prevLink, setPrevLink] = useState()\r\n    \r\n    const [reload, setReload] = useState(false)\r\n    \r\n    const toggleReload = () => {\r\n        setReload(preState => !preState)\r\n    }\r\n    \r\n    useEffect(() => {\r\n        getAllRentRequestFromTenant(authCtx.token)\r\n        .then((data) => {\r\n            const tempData = []\r\n            data.results.forEach(item => {\r\n                tempData.push({\r\n                    room: {\r\n                        room_id: item.room.id,\r\n                        room_name: item.room.name,\r\n                        cover: item.room.image,\r\n                        category: item.room.category.name,\r\n                        city: item.room.house.city,\r\n                        district: item.room.house.district,\r\n                        ward: item.room.house.ward,\r\n                        totalPrice: item.room.totalPrice\r\n                    },\r\n                    landlord: {\r\n                        name: item.landlord.username,\r\n                        cover: item.landlord.image,\r\n                        address: item.landlord.city + ' - ' + item.landlord.district + ' - ' + item.landlord.ward,\r\n                        linkfb: item.landlord.linkfb,\r\n                        linkin: item.landlord.linkin,\r\n                        linktw: item.landlord.linktw,\r\n                        linkli: item.landlord.linkli,\r\n                    },\r\n                    message: item.message,\r\n                    id: item.id,\r\n                })\r\n            })\r\n            setRequests(tempData)\r\n            setNextLink(data.next)\r\n            setPrevLink(data.previous)\r\n        })\r\n        .catch((err) => {\r\n                alert(err.message);\r\n        });\r\n    }, [reload])\r\n    \r\n    const handlePagination = (url) => {\r\n        try{\r\n            axios.get(url, {\r\n                headers: {\r\n                    \"Authorization\": `Bearer ${authCtx.token}`\r\n                }\r\n            })\r\n            .then((response) =>{\r\n                const temp = []\r\n                response.data.results.forEach(item => {\r\n                    temp.push({\r\n                        room: {\r\n                            room_id: item.room.id,\r\n                            room_name: item.room.name,\r\n                            cover: item.room.image,\r\n                            category: item.room.category.name,\r\n                            city: item.room.house.city,\r\n                            district: item.room.house.district,\r\n                            ward: item.room.house.ward,\r\n                            totalPrice: item.room.totalPrice\r\n                        },\r\n                        landlord: {\r\n                            name: item.landlord.username,\r\n                            cover: item.landlord.image,\r\n                            address: item.landlord.city + ' - ' + item.landlord.district + ' - ' + item.landlord.ward,\r\n                            linkfb: item.landlord.linkfb,\r\n                            linkin: item.landlord.linkin,\r\n                            linktw: item.landlord.linktw,\r\n                            linkli: item.landlord.linkli,\r\n                            phone: item.landlord.phone,\r\n                        },\r\n                        message: item.message,\r\n                        id: item.id,\r\n                    })\r\n                })\r\n                setRequests(temp)\r\n                setNextLink(response.data.next)\r\n                setPrevLink(response.data.previous)\r\n            })\r\n        }\r\n        catch(e){\r\n            console.log(e)\r\n        }\r\n    }\r\n  \r\n    return (\r\n        <section>\r\n            <Back name='Rent Request' title='Your Rent Request' cover={img}/>\r\n            <section className={`${classes.recent} ${classes.padding}`}>\r\n                <div className={classes.container}>\r\n                    <div className={`${classes.grid1} ${classes.mtop}`}>\r\n                        {requests.map((item, index) => <YourRequestCard item={item} index={index} reload={toggleReload}/>)}\r\n                    </div>\r\n                    <div className={classes.paginations}>\r\n                        {prevLink && <button className={classes.previous} onClick={()=>handlePagination(prevLink)}>Previous</button>}\r\n                        {nextLink && <button className={classes.next} onClick={()=>handlePagination(nextLink)}>Next</button>}\r\n                    </div>\r\n                </div>\r\n            </section>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default ManagerHouse;","D:\\rentup\\rentup_frontend\\src\\core\\components\\ManagePage\\House\\ManageHouse.js",["315"],[],"import Back from \"../../common/Back/Back\"\r\nimport img from \"../../../../assets/img/backgroundPost.jpg\"\r\nimport classes from \"./ManageHouse.module.css\"\r\nimport HouseCard from \"./HouseCard\"\r\nimport { useState, useEffect, useContext } from \"react\"\r\nimport AuthContext from '../../../../store/auth-context';\r\nimport {getOwnedHouseApi} from \"../../../../api/HouseApi\"\r\nimport axios from \"axios\"\r\n\r\nconst ManagerHouse = () => {\r\n    const authCtx = useContext(AuthContext)\r\n    \r\n    const [houses, setHouses] = useState([])\r\n    const [nextLink, setNextLink] = useState()\r\n    const [prevLink, setPrevLink] = useState()\r\n    const [reload, setReload] = useState(false)\r\n    \r\n    const toggleReload = () => {\r\n        setReload(preState => !preState)\r\n    }\r\n    \r\n    useEffect(() => {\r\n        getOwnedHouseApi(authCtx.token)\r\n        .then((data) => {\r\n            const tempData = []\r\n            data.results.forEach(item => {\r\n                tempData.push({\r\n                    id: item.id,\r\n                    cover: item.image,\r\n                    location: `${item.city} - ${item.district} - ${item.ward}`,\r\n                    category: item.category.name,\r\n                })\r\n            })\r\n            setHouses(tempData)\r\n            setNextLink(data.next)\r\n            setPrevLink(data.previous)\r\n        })\r\n        .catch((err) => {\r\n                alert(err.message);\r\n        });\r\n    }, [reload])\r\n    \r\n    const handlePagination = (url) => {\r\n        try{\r\n            axios.get(url, {\r\n                headers: {\r\n                    \"Authorization\": `Bearer ${authCtx.token}`\r\n                }\r\n            })\r\n            .then((response) =>{\r\n                const temp = []\r\n                response.data.results.forEach(item => {\r\n                    temp.push({\r\n                        id: item.id,\r\n                        cover: item.image,\r\n                        location: `${item.city} - ${item.district} - ${item.ward}`,\r\n                        category: item.category.name,\r\n                    })\r\n                })\r\n                setHouses(temp)\r\n                setNextLink(response.data.next)\r\n                setPrevLink(response.data.previous)\r\n            })\r\n        }\r\n        catch(e){\r\n            console.log(e)\r\n        }\r\n    }\r\n  \r\n  \r\n    return (\r\n        <section>\r\n            <Back name='House' title='House Grid - Our Houses' cover={img} path=\"/add-house\" action=\"Add House\"/>\r\n            <section className={`${classes.recent} ${classes.padding}`}>\r\n                <div className={classes.container}>\r\n                    <div className={`${classes.grid3} ${classes.mtop}`}>\r\n                        {houses.map((item, index) => <HouseCard item={item} index={index} reload={toggleReload}/>)}\r\n                    </div>\r\n                    <div className={classes.paginations}>\r\n                        {prevLink && <button className={classes.previous} onClick={()=>handlePagination(prevLink)}>Previous</button>}\r\n                        {nextLink && <button className={classes.next} onClick={()=>handlePagination(nextLink)}>Next</button>}\r\n                    </div>\r\n                </div>\r\n            </section>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default ManagerHouse;","D:\\rentup\\rentup_frontend\\src\\core\\components\\HomePage\\landlord\\LandlordCard.js",[],[],"D:\\rentup\\rentup_frontend\\src\\core\\components\\ManagePage\\Room\\ManageRoom.js",["316"],[],"import { useContext, useEffect, useState } from \"react\";\r\nimport { useParams } from 'react-router-dom';\r\nimport { getRoomListOfHouse } from \"../../../../api/RoomApi\";\r\nimport img from \"../../../../assets/img/backgroundPost.jpg\";\r\nimport AuthContext from '../../../../store/auth-context';\r\nimport Back from \"../../common/Back/Back\";\r\nimport classes from \"./ManageRoom.module.css\";\r\nimport RoomCard from \"./RoomCard\";\r\nimport axios from \"axios\"\r\n\r\nconst ManagerRoom = () => {\r\n    const params = useParams()\r\n\r\n    const id = params.id\r\n    \r\n    const authCtx = useContext(AuthContext)\r\n    \r\n    const [rooms, setRooms] = useState([])\r\n    const [nextLink, setNextLink] = useState()\r\n    const [prevLink, setPrevLink] = useState()\r\n    \r\n    const [reload, setReload] = useState(false)\r\n    \r\n    const toggleReload = () => {\r\n        setReload(preState => !preState)\r\n    }\r\n    \r\n    useEffect(() => {\r\n        getRoomListOfHouse(id, authCtx.token)\r\n        .then((data) => {\r\n            const tempData = []\r\n            data.results.forEach(item => {\r\n                tempData.push({\r\n                    id: item.id,\r\n                    cover: item.image,\r\n                    location: `${item.city} - ${item.district} - ${item.ward}`,\r\n                    category: item.category.name,\r\n                    status: item.status,\r\n                    active: item.active,\r\n                    detail: item.detail,\r\n                    area: item.area,\r\n                    rent_price: item.rentPrice,\r\n                    water_price: item.waterPrice,\r\n                    electricity_price: item.electricPrice,\r\n                    service_price: item.servicePrice,\r\n                    totalPrice: item.totalPrice,\r\n                })\r\n            })\r\n            setRooms(tempData)\r\n            setNextLink(data.next)\r\n            setPrevLink(data.previous)\r\n        })\r\n        .catch((err) => {\r\n                alert(err.message);\r\n        });\r\n    }, [reload])\r\n    \r\n    const handlePagination = (url) => {\r\n        try{\r\n            axios.get(url, {\r\n                headers: {\r\n                    \"Authorization\": `Bearer ${authCtx.token}`\r\n                }\r\n            })\r\n            .then((response) =>{\r\n                const temp = []\r\n                response.data.results.forEach(item => {\r\n                    temp.push({\r\n                        id: item.id,\r\n                        cover: item.image,\r\n                        location: `${item.city} - ${item.district} - ${item.ward}`,\r\n                        category: item.category.name,\r\n                        status: item.status,\r\n                        active: item.active,\r\n                        detail: item.detail,\r\n                        area: item.area,\r\n                        rent_price: item.rentPrice,\r\n                        water_price: item.waterPrice,\r\n                        electricity_price: item.electricPrice,\r\n                        service_price: item.servicePrice,\r\n                        totalPrice: item.totalPrice,\r\n                    })\r\n                })\r\n                setRooms(temp)\r\n                setNextLink(response.data.next)\r\n                setPrevLink(response.data.previous)\r\n            })\r\n        }\r\n        catch(e){\r\n            console.log(e)\r\n        }\r\n    }\r\n  \r\n    return (\r\n        <section>\r\n            <Back name='Room' title='Room Grid - Our Rooms' cover={img}/>\r\n            <section className={`${classes.recent} ${classes.padding}`}>\r\n                <div className={classes.container}>\r\n                    <div className={`${classes.grid3} ${classes.mtop}`}>\r\n                        {rooms.map((item, index) => <RoomCard item={item} index={index} reload={toggleReload}/>)}\r\n                    </div>\r\n                    <div className={classes.paginations}>\r\n                        {prevLink && <button className={classes.previous} onClick={()=>handlePagination(prevLink)}>Previous</button>}\r\n                        {nextLink && <button className={classes.next} onClick={()=>handlePagination(nextLink)}>Next</button>}\r\n                    </div>\r\n                </div>\r\n            </section>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default ManagerRoom;","D:\\rentup\\rentup_frontend\\src\\core\\components\\HomePage\\Recent\\RecentCard.js",[],[],"D:\\rentup\\rentup_frontend\\src\\core\\components\\ManagePage\\RentRequest\\RentRequest.js",["317"],[],"import Back from \"../../common/Back/Back\"\r\nimport img from \"../../../../assets/img/backgroundPost.jpg\"\r\nimport classes from \"./RentRequest.module.css\"\r\nimport RentRequestCard from \"./RentRequestCard\"\r\nimport { useState, useEffect, useContext } from \"react\"\r\nimport AuthContext from '../../../../store/auth-context';\r\nimport {getAllRentRequestFromLandlord} from \"../../../../api/RentRequestApi\"\r\nimport axios from \"axios\"\r\n\r\nconst RentRequest = () => {\r\n    const authCtx = useContext(AuthContext)\r\n    \r\n    const [requests, setRequests] = useState([])\r\n    const [nextLink, setNextLink] = useState()\r\n    const [prevLink, setPrevLink] = useState()\r\n    \r\n    const [reload, setReload] = useState(false)\r\n    \r\n    const toggleReload = () => {\r\n        setReload(preState => !preState)\r\n    }\r\n    \r\n    useEffect(() => {\r\n        getAllRentRequestFromLandlord(authCtx.token)\r\n        .then((data) => {\r\n            const tempData = []\r\n            data.results.forEach(item => {\r\n                tempData.push({\r\n                    room: {\r\n                        room_id: item.room.id,\r\n                        room_name: item.room.name,\r\n                        cover: item.room.image,\r\n                        category: item.room.category.name,\r\n                        city: item.room.house.city,\r\n                        district: item.room.house.district,\r\n                        ward: item.room.house.ward,\r\n                        totalPrice: item.room.totalPrice\r\n                    },\r\n                    tenant: {\r\n                        name: item.tenant.username,\r\n                        cover: item.tenant.image,\r\n                        address: item.tenant.city + ' - ' + item.tenant.district + ' - ' + item.tenant.ward,\r\n                        linkfb: item.tenant.linkfb,\r\n                        linkin: item.tenant.linkin,\r\n                        linktw: item.tenant.linktw,\r\n                        linkli: item.tenant.linkli,\r\n                    },\r\n                    message: item.message,\r\n                    id: item.id\r\n                })\r\n            })\r\n            setRequests(tempData)\r\n            setNextLink(data.next)\r\n            setPrevLink(data.previous)\r\n        })\r\n        .catch((err) => {\r\n                alert(err.message);\r\n        });\r\n    }, [reload])\r\n    \r\n    const handlePagination = (url) => {\r\n        try{\r\n            axios.get(url, {\r\n                headers: {\r\n                    \"Authorization\": `Bearer ${authCtx.token}`\r\n                }\r\n            })\r\n            .then((response) =>{\r\n                const temp = []\r\n                response.data.results.forEach(item => {\r\n                    temp.push({\r\n                        room: {\r\n                            room_id: item.room.id,\r\n                            room_name: item.room.name,\r\n                            cover: item.room.image,\r\n                            category: item.room.category.name,\r\n                            city: item.room.house.city,\r\n                            district: item.room.house.district,\r\n                            ward: item.room.house.ward,\r\n                            totalPrice: item.room.totalPrice\r\n                        },\r\n                        tenant: {\r\n                            name: item.tenant.username,\r\n                            cover: item.tenant.image,\r\n                            address: item.tenant.city + ' - ' + item.tenant.district + ' - ' + item.tenant.ward,\r\n                            linkfb: item.tenant.linkfb,\r\n                            linkin: item.tenant.linkin,\r\n                            linktw: item.tenant.linktw,\r\n                            linkli: item.tenant.linkli,\r\n                            phone: item.tenant.phone,\r\n                        },\r\n                        message: item.message,\r\n                        id: item.id\r\n                    })\r\n                })\r\n                setRequests(temp)\r\n                setNextLink(response.data.next)\r\n                setPrevLink(response.data.previous)\r\n            })\r\n        }\r\n        catch(e){\r\n            console.log(e)\r\n        }\r\n    }\r\n  \r\n    return (\r\n        <section>\r\n            <Back name='Rent Request' title='Your Rent Request' cover={img}/>\r\n            <section className={`${classes.recent} ${classes.padding}`}>\r\n                <div className={classes.container}>\r\n                    <div className={`${classes.grid1} ${classes.mtop}`}>\r\n                        {requests.map((item, index) => <RentRequestCard item={item} index={index} reload={toggleReload}/>)}\r\n                    </div>\r\n                    <div className={classes.paginations}>\r\n                        {prevLink && <button className={classes.previous} onClick={()=>handlePagination(prevLink)}>Previous</button>}\r\n                        {nextLink && <button className={classes.next} onClick={()=>handlePagination(nextLink)}>Next</button>}\r\n                    </div>\r\n                </div>\r\n            </section>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default RentRequest;","D:\\rentup\\rentup_frontend\\src\\core\\components\\ManagePage\\Rent\\ManageRent.js",["318","319"],[],"import { useContext, useEffect, useState } from \"react\";\r\nimport { useParams } from 'react-router-dom';\r\nimport { getAllConfirmRequestFromTenant } from \"../../../../api/RentRequestApi\";\r\nimport img from \"../../../../assets/img/backgroundPost.jpg\";\r\nimport AuthContext from '../../../../store/auth-context';\r\nimport Back from \"../../common/Back/Back\";\r\nimport classes from \"./ManageRent.module.css\";\r\nimport RoomCard from \"./RentCard\";\r\nimport axios from \"axios\"\r\n\r\nconst ManagerRent = () => {\r\n    const params = useParams()\r\n\r\n    const id = params.id\r\n    \r\n    const authCtx = useContext(AuthContext)\r\n    \r\n    const [rooms, setRooms] = useState([])\r\n    const [nextLink, setNextLink] = useState()\r\n    const [prevLink, setPrevLink] = useState()\r\n    \r\n    useEffect(() => {\r\n        getAllConfirmRequestFromTenant(authCtx.token)\r\n        .then((data) => {\r\n            console.log(data)\r\n            const tempData = []\r\n            data.results.forEach(item => {\r\n                tempData.push({\r\n                    id: item.room.id,\r\n                    cover: item.room.image,\r\n                    location: `${item.room.city} - ${item.room.district} - ${item.room.ward}`,\r\n                    category: item.room.category.name,\r\n                    status: item.room.status,\r\n                    active: item.room.active,\r\n                    detail: item.room.detail,\r\n                    area: item.room.area,\r\n                    rent_price: item.room.rentPrice,\r\n                    water_price: item.room.waterPrice,\r\n                    electricity_price: item.room.electricPrice,\r\n                    service_price: item.room.servicePrice,\r\n                    totalPrice: item.room.totalPrice,\r\n                    expriedAt: item.expires_at.substring(0, 10)\r\n                })\r\n            })\r\n            setRooms(tempData)\r\n            setNextLink(data.next)\r\n            setPrevLink(data.previous)\r\n        })\r\n        .catch((err) => {\r\n                alert(err.message);\r\n        });\r\n    }, [])\r\n    \r\n    const handlePagination = (url) => {\r\n        try{\r\n            axios.get(url, {\r\n                headers: {\r\n                    \"Authorization\": `Bearer ${authCtx.token}`\r\n                }\r\n            })\r\n            .then((response) =>{\r\n                const temp = []\r\n                response.data.results.forEach(item => {\r\n                    temp.push({\r\n                        id: item.room.id,\r\n                        cover: item.room.image,\r\n                        location: `${item.room.city} - ${item.room.district} - ${item.room.ward}`,\r\n                        category: item.room.category.name,\r\n                        status: item.room.status,\r\n                        active: item.room.active,\r\n                        detail: item.room.detail,\r\n                        area: item.room.area,\r\n                        rent_price: item.room.rentPrice,\r\n                        water_price: item.room.waterPrice,\r\n                        electricity_price: item.room.electricPrice,\r\n                        service_price: item.room.servicePrice,\r\n                        totalPrice: item.room.totalPrice,\r\n                        expriedAt: item.expires_at.substring(0, 10)\r\n                    })\r\n                })\r\n                setRooms(temp)\r\n                setNextLink(response.data.next)\r\n                setPrevLink(response.data.previous)\r\n            })\r\n        }\r\n        catch(e){\r\n            console.log(e)\r\n        }\r\n    }\r\n  \r\n    return (\r\n        <section>\r\n            <Back name='Room' title='Room Grid - Our Rooms' cover={img}/>\r\n            <section className={`${classes.recent} ${classes.padding}`}>\r\n                <div className={classes.container}>\r\n                    <div className={`${classes.grid3} ${classes.mtop}`}>\r\n                        {rooms.map((item, index) => <RoomCard item={item} index={index}/>)}\r\n                    </div>\r\n                    <div className={classes.paginations}>\r\n                        {prevLink && <button className={classes.previous} onClick={()=>handlePagination(prevLink)}>Previous</button>}\r\n                        {nextLink && <button className={classes.next} onClick={()=>handlePagination(nextLink)}>Next</button>}\r\n                    </div>\r\n                </div>\r\n            </section>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default ManagerRent;","D:\\rentup\\rentup_frontend\\src\\core\\components\\common\\Popup\\Popup.js",[],[],"D:\\rentup\\rentup_frontend\\src\\api\\CategoryApi.js",[],[],"D:\\rentup\\rentup_frontend\\src\\api\\UserApi.js",[],[],"D:\\rentup\\rentup_frontend\\src\\configs\\App.js",[],[],"D:\\rentup\\rentup_frontend\\src\\core\\components\\HomePage\\type\\TypeCard.js",[],[],"D:\\rentup\\rentup_frontend\\src\\core\\components\\ManagePage\\House\\HouseCard.js",["320"],[],"import { useContext, useState } from \"react\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { deleteHouse } from '../../../../api/HouseApi';\r\nimport AuthContext from '../../../../store/auth-context';\r\nimport classes from \"./HouseCard.module.css\";\r\nimport Popup from \"../../common/Popup/Popup\"\r\n\r\nconst HouseCard = props => {\r\n    const authCtx = useContext(AuthContext)\r\n    \r\n    const [popup, setPopup] = useState(false)\r\n    const [popupTitle, setPopupTitle] = useState('Successfully')\r\n    const [popupDetail, setPopupDetail] = useState('Your house has been deleted!')\r\n    \r\n    const deleteHandler = () => {\r\n        deleteHouse(props.item.id, authCtx.token)\r\n        .then((response) => {\r\n            if(response.status === 400) {\r\n                setPopupTitle(response.statusText)\r\n                setPopupDetail('Some things went wrong!')\r\n            }\r\n            if(response.status === 403){\r\n                setPopupTitle('Failed')\r\n                setPopupDetail('You do not have permission to perform this action!')\r\n            }\r\n            if(response.status === 200){\r\n                setPopupTitle('Delete House successfully')\r\n                setPopupDetail('Your house has been deleted!')\r\n            }\r\n            setPopup(true)\r\n            setPopup(true)\r\n        })\r\n        .catch((err) => {\r\n            alert(err.message);\r\n        });\r\n    }\r\n    \r\n    const reloadPage = () => {\r\n        setPopup(false)\r\n        props.reload()\r\n    }\r\n    \r\n    return (\r\n        <div className={`${classes.shadow} ${classes.houseCard}`} key={props.item.index}>\r\n            <div className={classes.img}>\r\n                <img src={props.item.cover} alt='' />\r\n            </div>\r\n            <div className={classes.text}>\r\n                <h4>{props.item.category}</h4>\r\n                <p>\r\n                    <i className='fa fa-location-dot'></i> {props.item.location}\r\n                </p>\r\n            </div>\r\n            <div className={`${classes.button} ${classes.flex}`}>\r\n                <Link to={`/manage/house/${props.item.id}/view`} className={classes.viewhouse}>view</Link>\r\n            </div>\r\n            <div className={`${classes.button} ${classes.flex}`}>\r\n                <Link to={`/manage/house/${props.item.id}/edit`} className={classes.edithouse}>Edit</Link>\r\n            </div>\r\n            <div className={`${classes.button} ${classes.flex}`}>\r\n                <Link to={`/manage/house/${props.item.id}/add-room`} className={classes.addroom}>Add Room</Link>\r\n            </div>\r\n            <div className={`${classes.button} ${classes.flex}`}>\r\n                <Link className={classes.deletehouse} onClick={deleteHandler}>Delete</Link>\r\n            </div>\r\n            <Popup trigger={popup}>\r\n                <h3>{popupTitle}</h3>\r\n                <p>{popupDetail}</p>\r\n                <button type=\"button\" onClick={reloadPage}>Ok</button>\r\n            </Popup>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HouseCard","D:\\rentup\\rentup_frontend\\src\\core\\components\\ManagePage\\Room\\RoomCard.js",["321"],[],"import classes from \"./RoomCard.module.css\"\r\nimport { useContext, useState } from \"react\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { deleteRoom, postRoom, unPostRoom } from '../../../../api/RoomApi';\r\nimport AuthContext from '../../../../store/auth-context';\r\nimport Popup from \"../../common/Popup/Popup\"\r\n\r\nconst RoomCard = props => {\r\n    const authCtx = useContext(AuthContext)\r\n    \r\n    const history = useHistory()\r\n    \r\n    const [popup, setPopup] = useState(false)\r\n    const [popupTitle, setPopupTitle] = useState('Successfully')\r\n    const [popupDetail, setPopupDetail] = useState('Your room has been updated!')\r\n    \r\n    const deleteHandler = () => {\r\n        deleteRoom(props.item.id, authCtx.token)\r\n        .then((response) => {\r\n            if(response.status === 400) {\r\n                setPopupTitle(response.statusText)\r\n                setPopupDetail('Some things went wrong!')\r\n            }\r\n            if(response.status === 403){\r\n                setPopupTitle('Failed')\r\n                setPopupDetail('You do not have permission to perform this action!')\r\n            }\r\n            if(response.status === 200){\r\n                setPopupTitle('Edit House successfully')\r\n                setPopupDetail('Your house has been updated!')\r\n            }\r\n            setPopup(true)\r\n        })\r\n        .catch((err) => {\r\n            alert(err.message);\r\n        });\r\n    }\r\n    \r\n    const postHandler = () => {\r\n        postRoom(props.item.id, authCtx.token)\r\n        .then((response) => {\r\n            if(response.status === 400) {\r\n                setPopupTitle(response.statusText)\r\n                setPopupDetail('Some things went wrong!')\r\n            }\r\n            if(response.status === 403){\r\n                setPopupTitle('Failed')\r\n                setPopupDetail('You do not have permission to perform this action!')\r\n            }\r\n            if(response.status === 200){\r\n                setPopupTitle('Edit House successfully')\r\n                setPopupDetail('Your house has been updated!')\r\n            }\r\n            setPopup(true)\r\n        })\r\n        .catch((err) => {\r\n            alert(err.message);\r\n        });\r\n    }\r\n    \r\n    const unPostHandler = () => {\r\n        unPostRoom(props.item.id, authCtx.token)\r\n        .then((response) => {\r\n            if(response.status === 400) {\r\n                setPopupTitle(response.statusText)\r\n                setPopupDetail('Some things went wrong!')\r\n            }\r\n            if(response.status === 403){\r\n                setPopupTitle('Failed')\r\n                setPopupDetail('You do not have permission to perform this action!')\r\n            }\r\n            if(response.status === 200){\r\n                setPopupTitle('Edit House successfully')\r\n                setPopupDetail('Your house has been updated!')\r\n            }\r\n            setPopup(true)\r\n        })\r\n        .catch((err) => {\r\n            alert(err.message);\r\n        });\r\n    }\r\n    \r\n    const reloadPage = () => {\r\n        setPopup(false)\r\n        props.reload()\r\n    }\r\n    \r\n    return (\r\n        <div className={`${classes.shadow} ${classes.roomCard}`} key={props.item.index}>\r\n            <div className={classes.img}>\r\n                <img src={props.item.cover} alt='' />\r\n            </div>\r\n            <div className={classes.text}>\r\n                <div className={`${classes.category} ${classes.flex}`}>\r\n                    <span style={{ background: \"#ff98001a\", color: \"#ff9800\" }}>{props.item.active ? \"active\" : \"inactive\"}</span>\r\n                </div>\r\n                <h4>{props.item.category}</h4>\r\n                <p>\r\n                    <i class=\"fa fa-info\"></i> Info: {props.item.detail}\r\n                </p>\r\n                <p>\r\n                    <i class=\"fa fa-chart-area\"></i> Area: {props.item.area} m^2\r\n                </p>\r\n                <p>\r\n                    <i class=\"fa fa-money-check\"></i> Rent price: {props.item.rent_price}đ / month\r\n                </p>\r\n                <p>\r\n                    <i class=\"fa fa-money-check\"></i> Water price: {props.item.water_price}đ / month\r\n                </p>\r\n                <p>\r\n                    <i class=\"fa fa-money-check\"></i> Electricity price: {props.item.electricity_price}đ / month\r\n                </p>\r\n                <p>\r\n                    <i class=\"fa fa-money-check\"></i> Services price: {props.item.service_price}đ / month\r\n                </p>\r\n                <p>\r\n                    <i class=\"fa fa-money-check\"></i> Total price: {props.item.totalPrice}đ / month\r\n                </p>\r\n            </div>\r\n            <div className={`${classes.button} ${classes.flex}`}>\r\n                {!props.item.active && <button className={classes.postRoom} onClick={postHandler}>Post</button>}\r\n                {props.item.active && <button className={classes.postRoom} onClick={unPostHandler}>UnPost</button>}\r\n                \r\n            </div>\r\n            <div className={`${classes.button} ${classes.flex}`}>\r\n                <Link className={classes.editRoom} to={`/room/${props.item.id}/edit`}>Edit</Link>\r\n            </div>\r\n            <div className={`${classes.button} ${classes.flex}`}>\r\n                <button className={classes.btn3} onClick={deleteHandler}>Delete</button>\r\n            </div>\r\n            <Popup trigger={popup}>\r\n                <h3>{popupTitle}</h3>\r\n                <p>{popupDetail}</p>\r\n                <button type=\"button\" onClick={reloadPage}>Ok</button>\r\n            </Popup>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default RoomCard","D:\\rentup\\rentup_frontend\\src\\core\\components\\ManagePage\\YourRequest\\YourRequestCard.js",["322"],[],"import { useContext, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { cancel_rent_request } from '../../../../api/RentRequestApi';\r\nimport AuthContext from '../../../../store/auth-context';\r\nimport Popup from \"../../common/Popup/Popup\";\r\nimport LandlordCard from \"../../HomePage/landlord/LandlordCard\";\r\nimport RecentCard from \"../../HomePage/Recent/RecentCard\";\r\nimport classes from \"./YourRequestCard.module.css\";\r\n\r\nconst YourRequestCard = props => {\r\n    const authCtx = useContext(AuthContext)\r\n    \r\n    const history = useHistory()\r\n    \r\n    const [popup, setPopup] = useState(false)\r\n    const [popupTitle, setPopupTitle] = useState('Cancel request successfully')\r\n    const [popupDetail, setPopupDetail] = useState('Your request has been cancelled!')\r\n    \r\n    const cancelRentRequest = () => {\r\n        cancel_rent_request(props.item.id, authCtx.token)\r\n        .then((response) => {\r\n            if(response.status === 400){\r\n                setPopupTitle(response.statusText)\r\n                setPopupDetail(response.data)\r\n            }\r\n            if(response.status === 403){\r\n                setPopupTitle('Failed')\r\n                setPopupDetail('You do not have permission to perform this action!')\r\n            }\r\n            if(response.status === 200){\r\n                setPopupTitle('Cancel request successfully')\r\n                setPopupDetail('Your request has been cancelled!')\r\n            }\r\n           setPopup(true)\r\n        })\r\n        .catch((err) => {\r\n            alert(err.message);\r\n        });\r\n    }\r\n    \r\n    const reloadPage = () => {\r\n        setPopup(false)\r\n        props.reload()\r\n    }\r\n    \r\n    return (\r\n        <div className={`${classes.shadow} ${classes.rentRequestCard}`} key={props.item.index}>\r\n            <div className={classes.rentRequestCard_info}>\r\n                <RecentCard item={props.item.room}/>\r\n                <LandlordCard item={props.item.landlord}/>\r\n            </div>\r\n            <div className={classes.rentRequestCard_message}>\r\n                <h2>Message:</h2>\r\n                <p>{props.item.message}</p>\r\n            </div>\r\n            <div className={`${classes.rentRequestCard_action}`}>\r\n                <button onClick={cancelRentRequest}>Cancel</button>\r\n            </div>\r\n            <Popup trigger={popup}>\r\n                <h3>{popupTitle}</h3>\r\n                <p>{popupDetail}</p>\r\n                <button type=\"button\" onClick={reloadPage}>Ok</button>\r\n            </Popup>\r\n        </div>\r\n    )\r\n}\r\nexport default YourRequestCard","D:\\rentup\\rentup_frontend\\src\\core\\components\\common\\Header\\Header.js",["323","324"],[],"import { Fragment, useContext, useEffect, useState } from \"react\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport logo from \"../../../../assets/img/logo.png\";\r\nimport AuthContext from '../../../../store/auth-context';\r\nimport classes from \"./Header.module.css\";\r\nimport {getCurrentUser} from '../../../../api/UserApi'\r\nimport {getAllNotifications} from '../../../../api/NotificationApi'\r\n\r\nconst Data = [\r\n    {\r\n        text: \"home\",\r\n        path: \"/\",\r\n    },\r\n    {\r\n        text: \"type\",\r\n        path: \"/type\",\r\n    },\r\n    {\r\n        text: \"post\",\r\n        path: \"/post\",\r\n    },\r\n    \r\n]\r\n\r\nconst Header = () => {\r\n    const history = useHistory()\r\n    \r\n    const authCtx = useContext(AuthContext)\r\n    \r\n    const [navList, setNavList] = useState(false)\r\n    const [user, setUser] = useState({})\r\n    const [notification, setNotification] = useState([])\r\n    const [switchRole, setSwitchRole] = useState(authCtx.role != 'user')\r\n    \r\n    useEffect(() => {\r\n        if(authCtx.isLoggedIn){\r\n            getCurrentUser(authCtx.token)\r\n            .then((data) => {\r\n                setUser({\r\n                    username: data.username,\r\n                    balance: data.balance\r\n                })\r\n            })\r\n            .catch((err) => {\r\n                alert(err.message);\r\n            });\r\n        }\r\n    }, [authCtx])\r\n    \r\n    useEffect(() => {\r\n        if(authCtx.isLoggedIn){\r\n            getAllNotifications(authCtx.token)\r\n            .then((data) => {\r\n                const temp = []\r\n                data.forEach(data => {\r\n                    temp.push({\r\n                        created_at: data.created_at.substring(0, 10),\r\n                        message: data.message\r\n                    })\r\n                })\r\n                setNotification(temp)\r\n            })\r\n            .catch((err) => {\r\n                alert(err.message);\r\n            });\r\n        }\r\n    }, [authCtx])\r\n    \r\n    useEffect(() => {\r\n        authCtx.changeRole(switchRole)\r\n    }, [switchRole])\r\n    \r\n    const logoutHandler = () => {\r\n        authCtx.logout();\r\n        history.replace(\"/signin\")\r\n    }\r\n    \r\n    const toggleRole = () => {\r\n        setSwitchRole(preState => !preState)\r\n    }\r\n    \r\n    return (\r\n        <header>\r\n            <div className={`${classes.container} ${classes.flex}`}>\r\n                <div> \r\n                    <img src={logo} alt='logo' />\r\n                </div>\r\n                <div className={classes.nav}>\r\n                    <ul className={classes.flex}>\r\n                        {Data.map((list, index) => (\r\n                            <li key={index}>\r\n                                <Link to={list.path}>{list.text}</Link>\r\n                            </li>\r\n                        ))}\r\n                    </ul>\r\n                </div>\r\n                <div className={classes.nav}>\r\n                    <ul className={navList ? classes.small : classes.hidden}>\r\n                        <li><Link to=\"/\">Home</Link></li>\r\n                        <li><Link>Balance: {user.balance} <i class=\"fa-solid fa-coins\"></i></Link></li>\r\n                        <li><Link to={\"/profile\"}>Profile</Link></li>\r\n                        {authCtx.role === 'landlord' && \r\n                            <Fragment>\r\n                                <li><Link to={\"/manage\"}>My List</Link></li>\r\n                                <li><Link to={\"/manage/rent_request\"}>Rent Request</Link></li>\r\n                            </Fragment>\r\n                        }\r\n                        {authCtx.role === 'user' && \r\n                            <Fragment>\r\n                                <li><Link to={\"/manage/my_rent\"}>My rent</Link></li>\r\n                                <li><Link to={\"/manage/your_request\"}>My Request</Link></li>\r\n                            </Fragment>\r\n                        }\r\n                        <li><Link onClick={logoutHandler}>Logout</Link></li>\r\n                    </ul>\r\n                </div>\r\n                <div className={`${classes.button} ${classes.flex} ${classes.account}`}>\r\n                    {user &&\r\n                        <div className={classes.switchRole}>\r\n                            <p>User</p>\r\n                            <div className={classes.switchRole_main}>\r\n                                <input type=\"checkbox\" hidden=\"hidden\" id=\"username\" onChange={toggleRole} defaultChecked={switchRole}/>\r\n                                <label className={classes.switch} for=\"username\"></label>\r\n                            </div>\r\n                            <p>Landlord</p>\r\n                        </div>\r\n                    } \r\n                    {user &&\r\n                        <div className={classes.notification}>\r\n                            <i class=\"fa-solid fa-bell\"></i>\r\n                            ({notification.length})    \r\n                            <ul className={classes.navbar_notifications}>\r\n                                {notification.map((item, index) =>\r\n                                    <li>\r\n                                        <p>{item.created_at}</p>\r\n                                        <h2>{item.message}</h2>\r\n                                    </li>\r\n                                )}\r\n                            </ul>\r\n                        </div>\r\n                    } \r\n                    {user && \r\n                        <Fragment>\r\n                            \r\n                            <Link className={classes.signin}>\r\n                                {user.username}\r\n                                <ul className={classes.navbar_account}>\r\n                                    <li><Link>Balance: {user.balance} <i class=\"fa-solid fa-coins\"></i></Link></li>\r\n                                    <li><Link to={\"/profile\"}>Profile</Link></li>\r\n                                    {authCtx.role === 'landlord' && \r\n                                        <Fragment>\r\n                                            <li><Link to={\"/manage\"}>My List</Link></li>\r\n                                            <li><Link to={\"/manage/rent_request\"}>Rent Request</Link></li>\r\n                                        </Fragment>\r\n                                    }\r\n                                    {authCtx.role === 'user' && \r\n                                        <Fragment>\r\n                                            <li><Link to={\"/manage/my_rent\"}>My rent</Link></li>\r\n                                            <li><Link to={\"/manage/your_request\"}>My Request</Link></li>\r\n                                        </Fragment>\r\n                                    }\r\n                                    <li><Link onClick={logoutHandler}>Logout</Link></li>\r\n                                </ul>\r\n                            </Link>\r\n                        </Fragment>\r\n                    }\r\n                    \r\n                    {!user && \r\n                        <Link to=\"/signin\" className={classes.signin}>\r\n                            <i className='fa fa-sign-out'></i> Sign In\r\n                        </Link>\r\n                    }\r\n                </div>\r\n\r\n                <div className={classes.toggle}>\r\n                    <button onClick={() => setNavList(!navList)}>\r\n                        {navList ? <i className='fa fa-times'></i> : <i className='fa fa-bars'></i>}\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header;","D:\\rentup\\rentup_frontend\\src\\core\\components\\ManagePage\\RentRequest\\RentRequestCard.js",["325"],[],"import { useContext, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { confirm_rent_request, reject_rent_request } from '../../../../api/RentRequestApi';\r\nimport AuthContext from '../../../../store/auth-context';\r\nimport classes from \"./RentRequestCard.module.css\";\r\nimport RecentCard from \"../../HomePage/Recent/RecentCard\";\r\nimport LandlordCard from \"../../HomePage/landlord/LandlordCard\"\r\nimport Popup from \"../../common/Popup/Popup\";\r\n\r\nconst RentRequestCard = props => {\r\n    const authCtx = useContext(AuthContext)\r\n    \r\n    const history = useHistory()\r\n    \r\n    const [popup, setPopup] = useState(false)\r\n    const [popupTitle, setPopupTitle] = useState('Successfully')\r\n    const [popupDetail, setPopupDetail] = useState('Rent request has been updated!')\r\n    \r\n    const confirmRentRequest = () => {\r\n        confirm_rent_request(props.item.id, authCtx.token)\r\n        .then((response) => {\r\n            if(response.status === 400){\r\n                setPopupTitle(response.statusText)\r\n                setPopupDetail(response.data)\r\n            }\r\n            if(response.status === 403){\r\n                setPopupTitle('Failed')\r\n                setPopupDetail('You do not have permission to perform this action!')\r\n            }\r\n            if(response.status === 200){\r\n                setPopupTitle('Successfully')\r\n                setPopupDetail('Rent request has been updated!')\r\n            }\r\n            setPopup(true)\r\n        })\r\n        .catch((err) => {\r\n            alert(err.message);\r\n        });\r\n    }\r\n    \r\n    const rejectRentRequest = () => {\r\n        reject_rent_request(props.item.id, authCtx.token)\r\n        .then((response) => {\r\n            if(response.status === 400){\r\n                setPopupTitle(response.statusText)\r\n                setPopupDetail(response.data)\r\n            }\r\n            if(response.status === 403){\r\n                setPopupTitle('Failed')\r\n                setPopupDetail('You do not have permission to perform this action!')\r\n            }\r\n            if(response.status === 200){\r\n                setPopupTitle('Successfully')\r\n                setPopupDetail('Rent request has been updated!')\r\n            }\r\n            setPopup(true)\r\n        })\r\n        .catch((err) => {\r\n            alert(err.message);\r\n        });\r\n    }\r\n    \r\n    const reloadPage = () => {\r\n        setPopup(false)\r\n        props.reload()\r\n    }\r\n    \r\n    return (\r\n        <div className={`${classes.shadow} ${classes.rentRequestCard}`} key={props.item.index}>\r\n            <div className={classes.rentRequestCard_info}>\r\n                <RecentCard item={props.item.room}/>\r\n                <LandlordCard item={props.item.tenant}/>\r\n            </div>\r\n            <div className={classes.rentRequestCard_message}>\r\n                <h2>Message:</h2>\r\n                <p>{props.item.message}</p>\r\n            </div>\r\n            <div className={`${classes.rentRequestCard_action}`}>\r\n                <button className={classes.rentRequestCard_confirm} onClick={confirmRentRequest}>Confirm</button>\r\n                <button onClick={rejectRentRequest}>Reject</button>\r\n            </div>\r\n            <Popup trigger={popup}>\r\n                <h3>{popupTitle}</h3>\r\n                <p>{popupDetail}</p>\r\n                <button type=\"button\" onClick={reloadPage}>Ok</button>\r\n            </Popup>\r\n        </div>\r\n    )\r\n}\r\nexport default RentRequestCard","D:\\rentup\\rentup_frontend\\src\\core\\components\\common\\Footer\\Footer.js",[],[],"D:\\rentup\\rentup_frontend\\src\\core\\components\\ManagePage\\Rent\\RentCard.js",["326","327","328","329","330"],[],"import classes from \"./RentCard.module.css\"\r\nimport { useContext } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { deleteRoom, postRoom } from '../../../../api/RoomApi';\r\nimport AuthContext from '../../../../store/auth-context';\r\n\r\nconst RoomCard = props => {\r\n    return (\r\n        <div className={`${classes.shadow} ${classes.roomCard}`} key={props.item.index}>\r\n            <div className={classes.img}>\r\n                <img src={props.item.cover} alt='' />\r\n            </div>\r\n            <div className={classes.text}>\r\n                <h4>{props.item.category}</h4>\r\n                <p>\r\n                    <i class=\"fa fa-info\"></i> Info: {props.item.detail}\r\n                </p>\r\n                <p>\r\n                    <i class=\"fa fa-chart-area\"></i> Area: {props.item.area} m^2\r\n                </p>\r\n                <p>\r\n                    <i class=\"fa fa-money-check\"></i> Rent price: {props.item.rent_price}đ / month\r\n                </p>\r\n                <p>\r\n                    <i class=\"fa fa-money-check\"></i> Water price: {props.item.water_price}đ / month\r\n                </p>\r\n                <p>\r\n                    <i class=\"fa fa-money-check\"></i> Electricity price: {props.item.electricity_price}đ / month\r\n                </p>\r\n                <p>\r\n                    <i class=\"fa fa-money-check\"></i> Services price: {props.item.service_price}đ / month\r\n                </p>\r\n                <p>\r\n                    <i class=\"fa fa-money-check\"></i> Total price: {props.item.totalPrice}đ / month\r\n                </p>\r\n                <p>\r\n                    <i class=\"fa fa-hourglass-start\"></i> Expried at: {props.item.expriedAt}\r\n                </p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default RoomCard","D:\\rentup\\rentup_frontend\\src\\core\\components\\common\\Heading\\Heading.js",[],[],"D:\\rentup\\rentup_frontend\\src\\api\\NotificationApi.js",[],[],"D:\\rentup\\rentup_frontend\\src\\core\\components\\ProfilePage\\ProfilePage.js",["331","332","333","334","335"],[],"import Page from \"../common/Page\";\r\nimport classes from \"./ProfilePage.module.css\";\r\nimport {useState, useEffect, useContext, useRef} from \"react\"\r\nimport {getCurrentUser, updateProfile} from '../../../api/UserApi'\r\nimport AuthContext from '../../../store/auth-context';\r\nimport { getDistrict, getProvince, getWard } from \"../../../api/ProvinceApi\";\r\nimport Popup from \"../common/Popup/Popup\"\r\nimport {Link} from \"react-router-dom\"\r\n\r\nconst ProfilePage = () => {\r\n    const [user, setUser] = useState({})\r\n    const [edit, setEdit] = useState(false)\r\n    const [cityData, setCityData] = useState([])\r\n    const [districtData, setDistrictData] = useState([])\r\n    const [wardData, setWardData] = useState([])\r\n    const imageRef = useRef()\r\n    \r\n    const [popup, setPopup] = useState(false)\r\n    const [reload, setReload] = useState(false)\r\n    \r\n    const [popupTitle, setPopupTitle] = useState('Change password successfully')\r\n    const [popupDetail, setPopupDetail] = useState('Your password has been updated')\r\n    \r\n    const authCtx = useContext(AuthContext)\r\n    \r\n    const toggleEdit = () => {\r\n        setEdit(prevState => !prevState)\r\n    }\r\n    \r\n    const [values, setValues] = useState({\r\n        email: '',\r\n        phone: '',\r\n        city: '1',\r\n        district: '1',\r\n        ward: '1',\r\n        linkfb: '',\r\n        linkin: '',\r\n        linktw: '',\r\n        linkli: '',\r\n    })\r\n    \r\n    const {email, phone, city, district, ward, linkfb, linkin, linktw, linkli} = values\r\n    \r\n    const handleChange = (key) => {\r\n        return (event) => {\r\n            setValues({...values, [key]: event.target.value})\r\n        }\r\n    }\r\n    \r\n    useEffect(() => {\r\n        getProvince().then(data => {\r\n            const tempCity = []\r\n            data.forEach(data => {\r\n                tempCity.push({\r\n                    text: data.name,\r\n                    value: data.code,\r\n                })\r\n            })\r\n            setCityData(tempCity)\r\n        })\r\n        .catch(error => console.log('Error', error))\r\n    }, [])\r\n    \r\n    useEffect(() => {\r\n        getDistrict(city).then(data => {\r\n            const tempDistrict = []\r\n            data.districts.forEach(data => {\r\n                tempDistrict.push({\r\n                    text: data.name,\r\n                    value: data.code,\r\n                })\r\n            })\r\n            setDistrictData(tempDistrict)\r\n        })\r\n        .catch(error => console.log('Error', error))\r\n    }, [city])\r\n    \r\n    useEffect(() => {\r\n        getWard(district).then(data => {\r\n            const tempWard = []\r\n            data.wards.forEach(data => {\r\n                tempWard.push({\r\n                    text: data.name,\r\n                    value: data.code,\r\n                })\r\n            })\r\n            setWardData(tempWard)\r\n        })\r\n        .catch(error => console.log('Error', error))\r\n    }, [district])\r\n    \r\n    useEffect(() => {\r\n        if(authCtx.isLoggedIn){\r\n            getCurrentUser(authCtx.token)\r\n            .then((data) => {\r\n                setUser(data);\r\n                setValues({\r\n                    email: data.email,\r\n                    phone: data.phone,\r\n                    city: '1',\r\n                    district: '1',\r\n                    ward: '1',\r\n                    linkfb: data.linkfb,\r\n                    linkin: data.linkin,\r\n                    linktw: data.linktw,\r\n                    linkli: data.linkli,\r\n                })\r\n            })\r\n            .catch((err) => {\r\n                alert(err.message);\r\n            });\r\n        }\r\n    }, [reload])\r\n    \r\n    const reloadPage = () => {\r\n        setReload(preState => !preState)\r\n        setPopup(false);\r\n        toggleEdit()\r\n    }\r\n    \r\n    const submitHandler = () => {\r\n        const cityInput = cityData.find(c => c.value == city).text\r\n        const districtInput = districtData.find(d => d.value == district).text\r\n        const wardInput = wardData.find(w => w.value == ward).text\r\n        \r\n        const data = {\r\n            email: email,\r\n            phone: phone,\r\n            city: cityInput,\r\n            district: districtInput,\r\n            ward: wardInput,\r\n            linkfb: linkfb,\r\n            linkin: linkin,\r\n            linktw: linktw,\r\n            linkli: linkli,\r\n            image: imageRef.current.files[0],\r\n        }\r\n        \r\n        updateProfile(authCtx.token, data)\r\n        .then((response) => {\r\n            if(response.status === 400) {\r\n                setPopupTitle(response.statusText)\r\n                setPopupDetail(response.data)\r\n                setPopup(true)\r\n            }\r\n            if(response.status === 200){\r\n                setPopupTitle('Update successfully')\r\n                setPopupDetail('Your profile has been updated.')\r\n                setPopup(true)\r\n            }\r\n            toggleEdit()\r\n        })\r\n        .catch((err) => {\r\n            console.error(err);\r\n        });\r\n    }\r\n    \r\n  return (\r\n    <Page>\r\n      <div className={classes.wrapper}>\r\n        <div className={classes.body}>\r\n          <div className={classes.profile}>\r\n            <h2>Identify</h2>\r\n            <div className={classes.content_box}>\r\n                <div className={classes.profile_img}>\r\n                    <img src={user.image}/>\r\n                    {!edit && <button className={classes.profile_btn} onClick={toggleEdit}>Edit</button>}\r\n                    {edit && <input type=\"file\" required ref={imageRef}/>}\r\n                    {edit && <button className={classes.profile_btn} onClick={submitHandler}>Submit</button>}\r\n                </div>\r\n                <table>\r\n                    <tbody>\r\n                    <tr>\r\n                        <td>Name</td>\r\n                        <td>:</td>\r\n                        <td>{user.username}</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>Email</td>\r\n                        <td>:</td>\r\n                        {!edit && <td>{user.email}</td>}\r\n                        {edit && <td><input type=\"text\" required value={email} onChange={handleChange('email')}/></td>}\r\n                    </tr>\r\n                    <tr>\r\n                        <td>City</td>\r\n                        <td>:</td>\r\n                        {!edit && <td>{user.city}</td>}\r\n                        {edit && <td>\r\n                            <select \r\n                                value={city}\r\n                                onChange={handleChange('city')}\r\n                            >\r\n                                {cityData.map(city => <option value={city.value} onChange={handleChange('city')}>{city.text}</option>)}\r\n                            </select>\r\n                        </td>}\r\n                    </tr>\r\n                    <tr>\r\n                        <td>District</td>\r\n                        <td>:</td>\r\n                        {!edit && <td>{user.district}</td>}\r\n                        {edit && <td>\r\n                            <select \r\n                                value={district}\r\n                                onChange={handleChange('district')}\r\n                            >\r\n                                {districtData.map(district => <option value={district.value} onChange={handleChange('district')}>{district.text}</option>)}\r\n                            </select>\r\n                            </td>}\r\n                    </tr>\r\n                    <tr>\r\n                        <td>Ward</td>\r\n                        <td>:</td>\r\n                        {!edit && <td>{user.ward}</td>}\r\n                        {edit && <td>\r\n                            <select \r\n                                value={ward}\r\n                                onChange={handleChange('ward')}\r\n                            >\r\n                                {wardData.map(ward => <option value={ward.value} onChange={handleChange('ward')}>{ward.text}</option>)}\r\n                            </select>\r\n                            </td>}\r\n                    </tr>\r\n                    <tr>\r\n                        <td>Phone</td>\r\n                        <td>:</td>\r\n                        {!edit && <td>{user.phone}</td>}\r\n                        {edit && <td><input type=\"text\" required value={phone} onChange={handleChange('phone')}/></td>}\r\n                    </tr>\r\n                    <tr>\r\n                        <td>Password</td>\r\n                        <td>:</td>\r\n                        <td><Link className={classes.profile_link} to={'change_password'}>Change Password</Link></td>\r\n                    </tr>\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n            <h2>SOCIAL MEDIA</h2>\r\n            <div className={classes.content_box}>\r\n                <table className={classes.social_box}>\r\n                    <tbody>\r\n                    <tr>\r\n                        <div className={classes.facebook}>\r\n                            <i className={`fa-brands fa-facebook-f ${classes.icon}`}></i>\r\n                        </div>\r\n                        <td>:</td>\r\n                        {!edit && <td>{user.linkfb}</td>}\r\n                        {edit && <td><input type=\"text\" required value={linkfb} onChange={handleChange('linkfb')}/></td>}\r\n                    </tr>\r\n                    <tr>\r\n                        <div className={classes.instagram}>\r\n                            <i className={`fa-brands fa-instagram ${classes.icon}`}></i>\r\n                        </div>\r\n                        <td>:</td>\r\n                        {!edit && <td>{user.linkin}</td>}\r\n                        {edit && <td><input type=\"text\" required value={linkin} onChange={handleChange('linkin')}/></td>}\r\n                    </tr>\r\n                    <tr>\r\n                        <div className={classes.twitter}>\r\n                            <i className={`fa-brands fa-twitter ${classes.icon}`}></i>\r\n                        </div>\r\n                        <td>:</td>\r\n                        {!edit && <td>{user.linktw}</td>}\r\n                        {edit && <td><input type=\"text\" required value={linktw} onChange={handleChange('linktw')}/></td>}\r\n                    </tr>\r\n                    <tr>\r\n                        <div className={classes.linkedin}>\r\n                            <i className={`fa-brands fa-linkedin ${classes.icon}`}></i>\r\n                        </div>\r\n                        <td>:</td>\r\n                        {!edit && <td>{user.linkli}</td>}\r\n                        {edit && <td><input type=\"text\" required value={linkli} onChange={handleChange('linkli')}/></td>}\r\n                    </tr>\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <Popup trigger={popup}>\r\n                <h3>{popupTitle}</h3>\r\n                <p>{popupDetail}</p>\r\n            <button type=\"button\" onClick={reloadPage}>Ok</button>\r\n        </Popup>\r\n    </Page>\r\n  );\r\n};\r\n\r\nexport default ProfilePage;","D:\\rentup\\rentup_frontend\\src\\core\\components\\ResetPasswordPage\\ResetPasswordPage.js",[],[],"D:\\rentup\\rentup_frontend\\src\\core\\components\\ChangePasswordPage\\ChangePasswordPage.js",[],[],{"ruleId":"336","severity":1,"message":"337","line":40,"column":17,"nodeType":"338","messageId":"339","endLine":40,"endColumn":22},{"ruleId":"340","severity":1,"message":"341","line":115,"column":54,"nodeType":"342","messageId":"339","endLine":115,"endColumn":56},{"ruleId":"340","severity":1,"message":"341","line":116,"column":62,"nodeType":"342","messageId":"339","endLine":116,"endColumn":64},{"ruleId":"340","severity":1,"message":"341","line":117,"column":54,"nodeType":"342","messageId":"339","endLine":117,"endColumn":56},{"ruleId":"340","severity":1,"message":"341","line":107,"column":54,"nodeType":"342","messageId":"339","endLine":107,"endColumn":56},{"ruleId":"340","severity":1,"message":"341","line":108,"column":62,"nodeType":"342","messageId":"339","endLine":108,"endColumn":64},{"ruleId":"340","severity":1,"message":"341","line":109,"column":54,"nodeType":"342","messageId":"339","endLine":109,"endColumn":56},{"ruleId":"340","severity":1,"message":"341","line":110,"column":58,"nodeType":"342","messageId":"339","endLine":110,"endColumn":60},{"ruleId":"343","severity":1,"message":"344","line":62,"column":8,"nodeType":"345","endLine":62,"endColumn":10,"suggestions":"346"},{"ruleId":"343","severity":1,"message":"347","line":119,"column":8,"nodeType":"345","endLine":119,"endColumn":12,"suggestions":"348"},{"ruleId":"340","severity":1,"message":"341","line":130,"column":54,"nodeType":"342","messageId":"339","endLine":130,"endColumn":56},{"ruleId":"340","severity":1,"message":"341","line":131,"column":62,"nodeType":"342","messageId":"339","endLine":131,"endColumn":64},{"ruleId":"340","severity":1,"message":"341","line":132,"column":54,"nodeType":"342","messageId":"339","endLine":132,"endColumn":56},{"ruleId":"340","severity":1,"message":"341","line":93,"column":54,"nodeType":"342","messageId":"339","endLine":93,"endColumn":56},{"ruleId":"340","severity":1,"message":"341","line":94,"column":62,"nodeType":"342","messageId":"339","endLine":94,"endColumn":64},{"ruleId":"340","severity":1,"message":"341","line":95,"column":54,"nodeType":"342","messageId":"339","endLine":95,"endColumn":56},{"ruleId":"340","severity":1,"message":"341","line":96,"column":58,"nodeType":"342","messageId":"339","endLine":96,"endColumn":60},{"ruleId":"343","severity":1,"message":"347","line":59,"column":8,"nodeType":"345","endLine":59,"endColumn":16,"suggestions":"349"},{"ruleId":"343","severity":1,"message":"347","line":41,"column":8,"nodeType":"345","endLine":41,"endColumn":16,"suggestions":"350"},{"ruleId":"343","severity":1,"message":"351","line":56,"column":8,"nodeType":"345","endLine":56,"endColumn":16,"suggestions":"352"},{"ruleId":"343","severity":1,"message":"347","line":59,"column":8,"nodeType":"345","endLine":59,"endColumn":16,"suggestions":"353"},{"ruleId":"354","severity":1,"message":"355","line":14,"column":11,"nodeType":"356","messageId":"357","endLine":14,"endColumn":13},{"ruleId":"343","severity":1,"message":"347","line":52,"column":8,"nodeType":"345","endLine":52,"endColumn":10,"suggestions":"358"},{"ruleId":"354","severity":1,"message":"359","line":2,"column":16,"nodeType":"356","messageId":"357","endLine":2,"endColumn":26},{"ruleId":"354","severity":1,"message":"360","line":11,"column":11,"nodeType":"356","messageId":"357","endLine":11,"endColumn":18},{"ruleId":"354","severity":1,"message":"360","line":13,"column":11,"nodeType":"356","messageId":"357","endLine":13,"endColumn":18},{"ruleId":"340","severity":1,"message":"361","line":33,"column":63,"nodeType":"342","messageId":"339","endLine":33,"endColumn":65},{"ruleId":"343","severity":1,"message":"362","line":71,"column":8,"nodeType":"345","endLine":71,"endColumn":20,"suggestions":"363"},{"ruleId":"354","severity":1,"message":"360","line":13,"column":11,"nodeType":"356","messageId":"357","endLine":13,"endColumn":18},{"ruleId":"354","severity":1,"message":"364","line":2,"column":10,"nodeType":"356","messageId":"357","endLine":2,"endColumn":20},{"ruleId":"354","severity":1,"message":"365","line":3,"column":10,"nodeType":"356","messageId":"357","endLine":3,"endColumn":14},{"ruleId":"354","severity":1,"message":"366","line":4,"column":10,"nodeType":"356","messageId":"357","endLine":4,"endColumn":20},{"ruleId":"354","severity":1,"message":"367","line":4,"column":22,"nodeType":"356","messageId":"357","endLine":4,"endColumn":30},{"ruleId":"354","severity":1,"message":"368","line":5,"column":8,"nodeType":"356","messageId":"357","endLine":5,"endColumn":19},{"ruleId":"343","severity":1,"message":"369","line":113,"column":8,"nodeType":"345","endLine":113,"endColumn":16,"suggestions":"370"},{"ruleId":"340","severity":1,"message":"341","line":122,"column":54,"nodeType":"342","messageId":"339","endLine":122,"endColumn":56},{"ruleId":"340","severity":1,"message":"341","line":123,"column":62,"nodeType":"342","messageId":"339","endLine":123,"endColumn":64},{"ruleId":"340","severity":1,"message":"341","line":124,"column":54,"nodeType":"342","messageId":"339","endLine":124,"endColumn":56},{"ruleId":"371","severity":1,"message":"372","line":166,"column":21,"nodeType":"373","endLine":166,"endColumn":44},"no-dupe-keys","Duplicate key 'phone'.","ObjectExpression","unexpected","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.","ArrayExpression",["374"],"React Hook useEffect has a missing dependency: 'authCtx.token'. Either include it or remove the dependency array.",["375"],["376"],["377"],"React Hook useEffect has missing dependencies: 'authCtx.token' and 'id'. Either include them or remove the dependency array.",["378"],["379"],"no-unused-vars","'id' is assigned a value but never used.","Identifier","unusedVar",["380"],"'useHistory' is defined but never used.","'history' is assigned a value but never used.","Expected '!==' and instead saw '!='.","React Hook useEffect has a missing dependency: 'authCtx'. Either include it or remove the dependency array.",["381"],"'useContext' is defined but never used.","'Link' is defined but never used.","'deleteRoom' is defined but never used.","'postRoom' is defined but never used.","'AuthContext' is defined but never used.","React Hook useEffect has missing dependencies: 'authCtx.isLoggedIn' and 'authCtx.token'. Either include them or remove the dependency array.",["382"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",{"desc":"383","fix":"384"},{"desc":"385","fix":"386"},{"desc":"387","fix":"388"},{"desc":"387","fix":"389"},{"desc":"390","fix":"391"},{"desc":"387","fix":"392"},{"desc":"393","fix":"394"},{"desc":"395","fix":"396"},{"desc":"397","fix":"398"},"Update the dependencies array to be: [id]",{"range":"399","text":"400"},"Update the dependencies array to be: [authCtx.token, id]",{"range":"401","text":"402"},"Update the dependencies array to be: [authCtx.token, reload]",{"range":"403","text":"404"},{"range":"405","text":"404"},"Update the dependencies array to be: [authCtx.token, id, reload]",{"range":"406","text":"407"},{"range":"408","text":"404"},"Update the dependencies array to be: [authCtx.token]",{"range":"409","text":"410"},"Update the dependencies array to be: [authCtx, switchRole]",{"range":"411","text":"412"},"Update the dependencies array to be: [authCtx.isLoggedIn, authCtx.token, reload]",{"range":"413","text":"414"},[2377,2379],"[id]",[3680,3684],"[authCtx.token, id]",[2320,2328],"[authCtx.token, reload]",[1408,1416],[1964,1972],"[authCtx.token, id, reload]",[2302,2310],[2018,2020],"[authCtx.token]",[2012,2024],"[authCtx, switchRole]",[3569,3577],"[authCtx.isLoggedIn, authCtx.token, reload]"]