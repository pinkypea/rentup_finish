{"ast":null,"code":"export const getRoomListApi = () => {\n  return fetch(`http://localhost:8080/api/balanha/getroomlist`, {\n    method: 'GET',\n    body: JSON.stringify({\n      house_id: \"4\",\n      room_name: \"Phòng tầng 3\",\n      room_type: \"0\",\n      area: \"15\",\n      max_tenant: \"1\",\n      rent_price: \"2000000\",\n      water_price: \"50000\",\n      electricity_price: \"3000\",\n      service_price: \"100000\",\n      detail: \"Phòng khép kín\"\n    }),\n    headers: {\n      'Content-Type': 'application/json',\n      'user_id': userId,\n      'token': token\n    }\n  }).then(response => {\n    return response.json();\n  }).catch(error => console.error(error));\n};\nexport const createRoomApi = (room, userId, token) => {\n  return fetch('http://localhost:8080/api/balanha/addroom', {\n    method: 'POST',\n    body: JSON.stringify({\n      house_id: room.house_id,\n      room_name: room.room_name,\n      room_type: room.room_type,\n      area: room.area,\n      max_tenant: room.max_tenant,\n      rent_price: room.rent_price,\n      water_price: room.water_price,\n      electricity_price: room.electricity_price,\n      service_price: room.service_price,\n      detail: room.detail\n    }),\n    headers: {\n      'Content-Type': 'application/json',\n      'user_id': userId,\n      'token': token\n    }\n  }).then(res => {\n    if (res.ok) {\n      return res.json();\n    } else {\n      return res.json().then(data => {\n        let errorMessage = 'Authentication failed!';\n        // if (data && data.error && data.error.message) {\n        //   errorMessage = data.error.message;\n        // }\n\n        throw new Error(errorMessage);\n      });\n    }\n  });\n};","map":{"version":3,"names":["getRoomListApi","fetch","method","body","JSON","stringify","house_id","room_name","room_type","area","max_tenant","rent_price","water_price","electricity_price","service_price","detail","headers","userId","token","then","response","json","catch","error","console","createRoomApi","room","res","ok","data","errorMessage","Error"],"sources":["D:/rentup/src/api/RoomApi.js"],"sourcesContent":["export const getRoomListApi = () => {\r\n    return fetch(`http://localhost:8080/api/balanha/getroomlist`, {\r\n        method: 'GET',\r\n        body: JSON.stringify({\r\n            house_id: \"4\",\r\n            room_name: \"Phòng tầng 3\",\r\n            room_type: \"0\",\r\n            area: \"15\",\r\n            max_tenant: \"1\",\r\n            rent_price: \"2000000\",\r\n            water_price: \"50000\",\r\n            electricity_price: \"3000\",\r\n            service_price: \"100000\",\r\n            detail: \"Phòng khép kín\"\r\n        }),\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n            'user_id': userId, \r\n            'token': token\r\n        },\r\n    })\r\n    .then((response) => {return response.json()})\r\n    .catch((error) => console.error(error))\r\n}\r\n\r\nexport const createRoomApi = (room, userId, token) => {\r\n    return fetch(\r\n        'http://localhost:8080/api/balanha/addroom',\r\n        {\r\n            method: 'POST',\r\n            body: JSON.stringify({\r\n                house_id: room.house_id,\r\n                room_name: room.room_name,\r\n                room_type: room.room_type,\r\n                area: room.area,\r\n                max_tenant: room.max_tenant,\r\n                rent_price: room.rent_price,\r\n                water_price: room.water_price,\r\n                electricity_price: room.electricity_price,\r\n                service_price: room.service_price,\r\n                detail: room.detail,\r\n            }),\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'user_id': userId, \r\n                'token': token\r\n            },\r\n        }\r\n    ).then((res) => {\r\n        \r\n        if (res.ok) {\r\n            return res.json();\r\n        } else {\r\n            return res.json().then((data) => {\r\n                let errorMessage = 'Authentication failed!';\r\n                // if (data && data.error && data.error.message) {\r\n                //   errorMessage = data.error.message;\r\n                // }\r\n    \r\n                throw new Error(errorMessage);\r\n            });\r\n        }\r\n    })\r\n} "],"mappings":"AAAA,OAAO,MAAMA,cAAc,GAAG,MAAM;EAChC,OAAOC,KAAK,CAAE,+CAA8C,EAAE;IAC1DC,MAAM,EAAE,KAAK;IACbC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;MACjBC,QAAQ,EAAE,GAAG;MACbC,SAAS,EAAE,cAAc;MACzBC,SAAS,EAAE,GAAG;MACdC,IAAI,EAAE,IAAI;MACVC,UAAU,EAAE,GAAG;MACfC,UAAU,EAAE,SAAS;MACrBC,WAAW,EAAE,OAAO;MACpBC,iBAAiB,EAAE,MAAM;MACzBC,aAAa,EAAE,QAAQ;MACvBC,MAAM,EAAE;IACZ,CAAC,CAAC;IACFC,OAAO,EAAE;MACL,cAAc,EAAE,kBAAkB;MAClC,SAAS,EAAEC,MAAM;MACjB,OAAO,EAAEC;IACb;EACJ,CAAC,CAAC,CACDC,IAAI,CAAEC,QAAQ,IAAK;IAAC,OAAOA,QAAQ,CAACC,IAAI,EAAE;EAAA,CAAC,CAAC,CAC5CC,KAAK,CAAEC,KAAK,IAAKC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC,CAAC;AAC3C,CAAC;AAED,OAAO,MAAME,aAAa,GAAG,CAACC,IAAI,EAAET,MAAM,EAAEC,KAAK,KAAK;EAClD,OAAOjB,KAAK,CACR,2CAA2C,EAC3C;IACIC,MAAM,EAAE,MAAM;IACdC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;MACjBC,QAAQ,EAAEoB,IAAI,CAACpB,QAAQ;MACvBC,SAAS,EAAEmB,IAAI,CAACnB,SAAS;MACzBC,SAAS,EAAEkB,IAAI,CAAClB,SAAS;MACzBC,IAAI,EAAEiB,IAAI,CAACjB,IAAI;MACfC,UAAU,EAAEgB,IAAI,CAAChB,UAAU;MAC3BC,UAAU,EAAEe,IAAI,CAACf,UAAU;MAC3BC,WAAW,EAAEc,IAAI,CAACd,WAAW;MAC7BC,iBAAiB,EAAEa,IAAI,CAACb,iBAAiB;MACzCC,aAAa,EAAEY,IAAI,CAACZ,aAAa;MACjCC,MAAM,EAAEW,IAAI,CAACX;IACjB,CAAC,CAAC;IACFC,OAAO,EAAE;MACL,cAAc,EAAE,kBAAkB;MAClC,SAAS,EAAEC,MAAM;MACjB,OAAO,EAAEC;IACb;EACJ,CAAC,CACJ,CAACC,IAAI,CAAEQ,GAAG,IAAK;IAEZ,IAAIA,GAAG,CAACC,EAAE,EAAE;MACR,OAAOD,GAAG,CAACN,IAAI,EAAE;IACrB,CAAC,MAAM;MACH,OAAOM,GAAG,CAACN,IAAI,EAAE,CAACF,IAAI,CAAEU,IAAI,IAAK;QAC7B,IAAIC,YAAY,GAAG,wBAAwB;QAC3C;QACA;QACA;;QAEA,MAAM,IAAIC,KAAK,CAACD,YAAY,CAAC;MACjC,CAAC,CAAC;IACN;EACJ,CAAC,CAAC;AACN,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}