{"ast":null,"code":"import Apis, { Api, endpoints } from '../configs/App';\nconst API_AUTH = `http://localhost:8080/api/balanha/`;\nexport const signinApi = (username, password) => {\n  return fetch(`${API_AUTH}login`, {\n    method: 'POST',\n    body: JSON.stringify({\n      username: username,\n      password: password\n    }),\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  }).then(response => {\n    return response.json();\n  }).catch(error => console.error(error));\n};\nexport const signupApi = data => {\n  const formData = new FormData();\n  formData.append(\"first_name\", data.first_name);\n  formData.append(\"last_name\", data.last_name);\n  formData.append(\"email\", data.email);\n  formData.append(\"password\", data.password);\n  formData.append(\"username\", data.username);\n  formData.append(\"phone\", data.phone);\n  formData.append(\"city\", data.city);\n  formData.append(\"district\", data.district);\n  formData.append(\"ward\", data.ward);\n  formData.append(\"linkfb\", data.linkfb);\n  formData.append(\"linkin\", data.linkin);\n  formData.append(\"linktw\", data.linktw);\n  formData.append(\"linkli\", data.linkli);\n  formData.append(\"image\", data.image);\n  return Apis.post(endpoints['register'], formData, {\n    headers: {\n      \"Content-Type\": \"multipart/form-data; boundary=<calculated when request is sent>\"\n    }\n  }).then(response => {\n    return response.json();\n  }).catch(error => console.error(error));\n};\nexport const logoutApi = (userId, token) => {\n  return fetch(`${API_AUTH}logout`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n      'user_id': userId,\n      'token': token\n    }\n  }).then(res => {\n    if (res.ok) {\n      return res.json();\n    } else {\n      return res.json().then(data => {\n        let errorMessage = 'Authentication failed!';\n        // if (data && data.error && data.error.message) {\n        //   errorMessage = data.error.message;\n        // }\n\n        throw new Error(errorMessage);\n      });\n    }\n  });\n};\nexport const landlordRegisterApi = (userId, token, citizen_identification, bank, bank_account) => {\n  return fetch(`${API_AUTH}rentalapproval`, {\n    method: 'POST',\n    body: JSON.stringify({\n      citizen_identification: citizen_identification,\n      bank: bank,\n      bank_account: bank_account\n    }),\n    headers: {\n      'Content-Type': 'application/json',\n      'user_id': userId,\n      'token': token\n    }\n  }).then(response => {\n    return response.json();\n  }).catch(error => console.error(error));\n};","map":{"version":3,"names":["Apis","Api","endpoints","API_AUTH","signinApi","username","password","fetch","method","body","JSON","stringify","headers","then","response","json","catch","error","console","signupApi","data","formData","FormData","append","first_name","last_name","email","phone","city","district","ward","linkfb","linkin","linktw","linkli","image","post","logoutApi","userId","token","res","ok","errorMessage","Error","landlordRegisterApi","citizen_identification","bank","bank_account"],"sources":["D:/rentup/src/api/AuthApi.js"],"sourcesContent":["import Apis, {Api, endpoints} from '../configs/App'\r\n\r\nconst API_AUTH = `http://localhost:8080/api/balanha/`\r\n\r\nexport const signinApi = (username, password) => {\r\n    return fetch(\r\n        `${API_AUTH}login`,\r\n        {\r\n            method: 'POST',\r\n            body: JSON.stringify({\r\n                username: username,\r\n                password: password,\r\n            }),\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n        })\r\n        .then((response) => {return response.json()})\r\n        .catch((error) => console.error(error))\r\n}\r\n\r\nexport const signupApi = (data) => {\r\n    const formData = new FormData()\r\n    formData.append(\"first_name\", data.first_name)\r\n    formData.append(\"last_name\", data.last_name)\r\n    formData.append(\"email\", data.email)\r\n    formData.append(\"password\", data.password)\r\n    formData.append(\"username\", data.username)\r\n    formData.append(\"phone\", data.phone)\r\n    formData.append(\"city\", data.city)\r\n    formData.append(\"district\", data.district)\r\n    formData.append(\"ward\", data.ward)\r\n    formData.append(\"linkfb\", data.linkfb)\r\n    formData.append(\"linkin\", data.linkin)\r\n    formData.append(\"linktw\", data.linktw)\r\n    formData.append(\"linkli\", data.linkli)\r\n    formData.append(\"image\", data.image)\r\n    \r\n    return Apis.post(endpoints['register'], formData, {\r\n        headers: {\r\n            \"Content-Type\": \"multipart/form-data; boundary=<calculated when request is sent>\"\r\n        }\r\n    })\r\n    .then((response) => {return response.json()})\r\n    .catch((error) => console.error(error))\r\n}\r\n\r\nexport const logoutApi = (userId, token) => {\r\n    return fetch(\r\n        `${API_AUTH}logout`,\r\n        {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'user_id': userId, \r\n                'token': token\r\n            },\r\n        }\r\n    ).then((res) => {\r\n        if (res.ok) {\r\n            return res.json();\r\n        } else {\r\n            return res.json().then((data) => {\r\n                let errorMessage = 'Authentication failed!';\r\n                // if (data && data.error && data.error.message) {\r\n                //   errorMessage = data.error.message;\r\n                // }\r\n    \r\n                throw new Error(errorMessage);\r\n            });\r\n        }\r\n    })\r\n}\r\n\r\nexport const landlordRegisterApi = (userId, token, citizen_identification, bank, bank_account) => {\r\n    return fetch(\r\n        `${API_AUTH}rentalapproval`,\r\n        {\r\n            method: 'POST',\r\n            body: JSON.stringify({\r\n                citizen_identification: citizen_identification, \r\n                bank: bank, \r\n                bank_account: bank_account\r\n            }),\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'user_id': userId, \r\n                'token': token\r\n            },\r\n        }\r\n    )\r\n    .then((response) => {return response.json()})\r\n    .catch((error) => console.error(error))\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}