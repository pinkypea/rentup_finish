{"ast":null,"code":"var _jsxFileName = \"D:\\\\rentup\\\\src\\\\store\\\\auth-context.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/React.createContext({\n  token: '',\n  isLoggedIn: false,\n  username: '',\n  role: '',\n  login: token => {},\n  logout: () => {}\n});\nexport const AuthContextProvider = props => {\n  _s();\n  const [token, setToken] = useState(null);\n  const [username, setUsername] = useState(null);\n  const [role, setRole] = useState(null);\n  const userIsLoggedIn = !!token;\n  const usernameHandler = username => {\n    setUsername(username);\n  };\n  const roleHandler = role => {\n    setRole(role);\n  };\n  const loginHandler = token => {\n    setToken(token);\n  };\n  const logoutHandler = () => {\n    setToken(null);\n  };\n  const contextValue = {\n    token: token,\n    isLoggedIn: userIsLoggedIn,\n    login: loginHandler,\n    logout: logoutHandler\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: contextValue,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 9\n  }, this);\n};\n_s(AuthContextProvider, \"tDAIelCE+c8jwDhBn6dbeES0+g4=\");\n_c = AuthContextProvider;\nexport default AuthContext;\nvar _c;\n$RefreshReg$(_c, \"AuthContextProvider\");","map":{"version":3,"names":["React","useState","AuthContext","createContext","token","isLoggedIn","username","role","login","logout","AuthContextProvider","props","setToken","setUsername","setRole","userIsLoggedIn","usernameHandler","roleHandler","loginHandler","logoutHandler","contextValue","children"],"sources":["D:/rentup/src/store/auth-context.js"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\nconst AuthContext = React.createContext({\r\n    token: '',\r\n    isLoggedIn: false,\r\n    username: '',\r\n    role: '',\r\n    login: (token) => {},\r\n    logout: () => {},\r\n});\r\n\r\nexport const AuthContextProvider = (props) => {\r\n    const [token, setToken] = useState(null);\r\n    const [username, setUsername] = useState(null);\r\n    const [role, setRole] = useState(null);\r\n\r\n    const userIsLoggedIn = !!token;\r\n    \r\n    const usernameHandler = (username) => {\r\n        setUsername(username);\r\n    }\r\n    \r\n    const roleHandler = (role) => {\r\n        setRole(role);\r\n    }\r\n\r\n    const loginHandler = (token) => {\r\n        setToken(token);\r\n    };\r\n\r\n    const logoutHandler = () => {\r\n        setToken(null);\r\n    };\r\n\r\n    const contextValue = {\r\n        token: token,\r\n        isLoggedIn: userIsLoggedIn,\r\n        login: loginHandler,\r\n        logout: logoutHandler,\r\n    };\r\n\r\n    return (\r\n        <AuthContext.Provider value={contextValue}>\r\n            {props.children}\r\n        </AuthContext.Provider>\r\n    );\r\n};\r\n\r\nexport default AuthContext;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC;AAExC,MAAMC,WAAW,gBAAGF,KAAK,CAACG,aAAa,CAAC;EACpCC,KAAK,EAAE,EAAE;EACTC,UAAU,EAAE,KAAK;EACjBC,QAAQ,EAAE,EAAE;EACZC,IAAI,EAAE,EAAE;EACRC,KAAK,EAAGJ,KAAK,IAAK,CAAC,CAAC;EACpBK,MAAM,EAAE,MAAM,CAAC;AACnB,CAAC,CAAC;AAEF,OAAO,MAAMC,mBAAmB,GAAIC,KAAK,IAAK;EAAA;EAC1C,MAAM,CAACP,KAAK,EAAEQ,QAAQ,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAM,CAACK,QAAQ,EAAEO,WAAW,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;EAC9C,MAAM,CAACM,IAAI,EAAEO,OAAO,CAAC,GAAGb,QAAQ,CAAC,IAAI,CAAC;EAEtC,MAAMc,cAAc,GAAG,CAAC,CAACX,KAAK;EAE9B,MAAMY,eAAe,GAAIV,QAAQ,IAAK;IAClCO,WAAW,CAACP,QAAQ,CAAC;EACzB,CAAC;EAED,MAAMW,WAAW,GAAIV,IAAI,IAAK;IAC1BO,OAAO,CAACP,IAAI,CAAC;EACjB,CAAC;EAED,MAAMW,YAAY,GAAId,KAAK,IAAK;IAC5BQ,QAAQ,CAACR,KAAK,CAAC;EACnB,CAAC;EAED,MAAMe,aAAa,GAAG,MAAM;IACxBP,QAAQ,CAAC,IAAI,CAAC;EAClB,CAAC;EAED,MAAMQ,YAAY,GAAG;IACjBhB,KAAK,EAAEA,KAAK;IACZC,UAAU,EAAEU,cAAc;IAC1BP,KAAK,EAAEU,YAAY;IACnBT,MAAM,EAAEU;EACZ,CAAC;EAED,oBACI,QAAC,WAAW,CAAC,QAAQ;IAAC,KAAK,EAAEC,YAAa;IAAA,UACrCT,KAAK,CAACU;EAAQ;IAAA;IAAA;IAAA;EAAA,QACI;AAE/B,CAAC;AAAC,GAnCWX,mBAAmB;AAAA,KAAnBA,mBAAmB;AAqChC,eAAeR,WAAW;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}