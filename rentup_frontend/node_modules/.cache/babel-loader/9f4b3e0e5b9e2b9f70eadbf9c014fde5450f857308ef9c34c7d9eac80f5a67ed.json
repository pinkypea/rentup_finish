{"ast":null,"code":"import Apis, { endpoints } from '../configs/App';\nexport const getAllRoomAvailable = filter => {\n  return Apis.get(endpoints['room'], Object.keys(filter).map(function (key) {\n    return encodeURIComponent(key) + '=' + encodeURIComponent(reqData[key]);\n  }).join('&')).then(response => {\n    return response.data;\n  }).catch(error => console.error(error));\n};\nexport const getRoomListApi = filter => {\n  return fetch(`http://localhost:8080/api/balanha/getroomlist`, {\n    method: 'POST',\n    body: JSON.stringify(filter !== undefined ? filter : {}),\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  }).then(response => {\n    return response.json();\n  }).catch(error => console.error(error));\n};\nexport const createRoomApi = (room, userId, token) => {\n  return fetch('http://localhost:8080/api/balanha/addroom', {\n    method: 'POST',\n    body: JSON.stringify({\n      house_id: room.house_id,\n      room_name: room.room_name,\n      room_type: room.room_type,\n      area: room.area,\n      max_tenant: room.max_tenant,\n      rent_price: room.rent_price,\n      water_price: room.water_price,\n      electricity_price: room.electricity_price,\n      service_price: room.service_price,\n      detail: room.detail\n    }),\n    headers: {\n      'Content-Type': 'application/json',\n      'user_id': userId,\n      'token': token\n    }\n  }).then(res => {\n    if (res.ok) {\n      return res.json();\n    } else {\n      return res.json().then(data => {\n        let errorMessage = 'Authentication failed!';\n        // if (data && data.error && data.error.message) {\n        //   errorMessage = data.error.message;\n        // }\n\n        throw new Error(errorMessage);\n      });\n    }\n  });\n};\nexport const getOwnedRoomApi = (house_id, userId, token) => {\n  return fetch(`http://localhost:8080/api/balanha/getownedroom`, {\n    method: 'POST',\n    body: JSON.stringify({\n      house_id: house_id\n    }),\n    headers: {\n      'Content-Type': 'application/json',\n      'user_id': userId,\n      'token': token\n    }\n  }).then(res => {\n    if (res.ok) {\n      return res.json();\n    } else {\n      return res.json().then(data => {\n        let errorMessage = 'Authentication failed!';\n        // if (data && data.error && data.error.message) {\n        //   errorMessage = data.error.message;\n        // }\n\n        throw new Error(errorMessage);\n      });\n    }\n  });\n};","map":{"version":3,"names":["Apis","endpoints","getAllRoomAvailable","filter","get","Object","keys","map","key","encodeURIComponent","reqData","join","then","response","data","catch","error","console","getRoomListApi","fetch","method","body","JSON","stringify","undefined","headers","json","createRoomApi","room","userId","token","house_id","room_name","room_type","area","max_tenant","rent_price","water_price","electricity_price","service_price","detail","res","ok","errorMessage","Error","getOwnedRoomApi"],"sources":["D:/rentup/src/api/RoomApi.js"],"sourcesContent":["import Apis, {endpoints} from '../configs/App'\r\n\r\nexport const getAllRoomAvailable = (filter) => {\r\n    return Apis.get(endpoints['room'], Object.keys(filter).map(function(key) {\r\n        return encodeURIComponent(key) + '=' + encodeURIComponent(reqData[key])\r\n    }).join('&'))\r\n    .then((response) => {return response.data})\r\n    .catch((error) => console.error(error))\r\n}\r\n\r\nexport const getRoomListApi = (filter) => {\r\n    return fetch(`http://localhost:8080/api/balanha/getroomlist`, {\r\n        method: 'POST',\r\n        body: JSON.stringify(filter !== undefined ? filter : {}),\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n        },\r\n    })\r\n        .then((response) => {\r\n            return response.json()\r\n        })\r\n        .catch((error) => console.error(error))\r\n}\r\n\r\nexport const createRoomApi = (room, userId, token) => {\r\n    return fetch(\r\n        'http://localhost:8080/api/balanha/addroom',\r\n        {\r\n            method: 'POST',\r\n            body: JSON.stringify({\r\n                house_id: room.house_id,\r\n                room_name: room.room_name,\r\n                room_type: room.room_type,\r\n                area: room.area,\r\n                max_tenant: room.max_tenant,\r\n                rent_price: room.rent_price,\r\n                water_price: room.water_price,\r\n                electricity_price: room.electricity_price,\r\n                service_price: room.service_price,\r\n                detail: room.detail,\r\n            }),\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'user_id': userId,\r\n                'token': token\r\n            },\r\n        }\r\n    ).then((res) => {\r\n\r\n        if (res.ok) {\r\n            return res.json();\r\n        } else {\r\n            return res.json().then((data) => {\r\n                let errorMessage = 'Authentication failed!';\r\n                // if (data && data.error && data.error.message) {\r\n                //   errorMessage = data.error.message;\r\n                // }\r\n\r\n                throw new Error(errorMessage);\r\n            });\r\n        }\r\n    })\r\n} \r\n\r\nexport const getOwnedRoomApi = (house_id, userId, token) => {\r\n    return fetch(\r\n        `http://localhost:8080/api/balanha/getownedroom`,\r\n        {\r\n            method: 'POST',\r\n            body: JSON.stringify({\r\n                house_id: house_id,\r\n            }),\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'user_id': userId, \r\n                'token': token\r\n            },\r\n        }\r\n    ).then((res) => {\r\n        if (res.ok) {\r\n            return res.json();\r\n        } else {\r\n            return res.json().then((data) => {\r\n                let errorMessage = 'Authentication failed!';\r\n                // if (data && data.error && data.error.message) {\r\n                //   errorMessage = data.error.message;\r\n                // }\r\n    \r\n                throw new Error(errorMessage);\r\n            });\r\n        }\r\n    })\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}